<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ithaca&#39;s Tavern</title>
  
  <subtitle>开心点！人间不值得</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yoloyanng.github.io/"/>
  <updated>2018-10-10T08:45:03.535Z</updated>
  <id>https://yoloyanng.github.io/</id>
  
  <author>
    <name>Ithaca</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ACM_day1</title>
    <link href="https://yoloyanng.github.io/2018/10/10/ACM-day1/"/>
    <id>https://yoloyanng.github.io/2018/10/10/ACM-day1/</id>
    <published>2018-10-10T07:58:26.000Z</published>
    <updated>2018-10-10T08:45:03.535Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/10/10/5bbdb17b39a0a.jpg" width="50%" height="50%"></p><p>现在已经是大二了，也已经十月份了，才开始接触ACM，实在是。。。。也还是可以的，只是希望说能够借此提升编程水平。找了本书《挑战程序设计竞赛》，找了个平台——Leetcode，加上还有这么台电脑，既既然如此，那就就开始吧！</p><a id="more"></a><p><img src="https://i.loli.net/2018/10/10/5bbdb33f1e9a5.png" alt=""></p><blockquote><p>样例1：</p><p>输入：</p><p>n = 3</p><p>m = 10</p><p>k = {1, 3 , 5}</p><p>输出：</p><p>Yes（例如4次抽取的结果是1、1、3、5，和就是10）</p><hr><p>样例2：</p><p>输入：</p><p>n = 3</p><p>m =9 </p><p>k = {1 , 3 , 5}</p><p>输出：</p><p>No（不存在和为9的抽取方案）</p></blockquote><ul><li>My Coding</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/10/10/5bbdb17b39a0a.jpg&quot; width=&quot;50%&quot; height=&quot;50%&quot;&gt;&lt;/p&gt;
&lt;p&gt;现在已经是大二了，也已经十月份了，才开始接触ACM，实在是。。。。也还是可以的，只是希望说能够借此提升编程水平。找了本书《挑战程序设计竞赛》，找了个平台——Leetcode，加上还有这么台电脑，既既然如此，那就就开始吧！&lt;/p&gt;
    
    </summary>
    
    
      <category term="ACM" scheme="https://yoloyanng.github.io/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>Bugku-RE-writeup</title>
    <link href="https://yoloyanng.github.io/2018/10/09/Bugku-RE-writeup/"/>
    <id>https://yoloyanng.github.io/2018/10/09/Bugku-RE-writeup/</id>
    <published>2018-10-08T16:00:00.000Z</published>
    <updated>2018-10-09T15:53:08.862Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/10/09/5bbc1b4048f82.jpg" alt=""></p><a id="more"></a><blockquote><p>对于bugku平台上面的逆向题目的解题与思考过程，希望能够有所收获</p></blockquote><h3 id="Easy-vb"><a href="#Easy-vb" class="headerlink" title="Easy_vb"></a>Easy_vb</h3><p>在IDA中打开就能够看到flag了，算不上是逆向题了</p><p><img src="https://i.loli.net/2018/10/09/5bbc1cd022ca1.png" alt=""></p><hr><h3 id="Easy-Re"><a href="#Easy-Re" class="headerlink" title="Easy_Re"></a>Easy_Re</h3><p>010Editor中打开，ctrl+F搜索一波：</p><p><img src="https://i.loli.net/2018/10/09/5bbc1f42c1223.png" alt=""></p><p>或者OD中打开，右键  中文搜索引擎-&gt;ASCII</p><p><img src="https://i.loli.net/2018/10/09/5bbc1fce41c4d.png" alt=""></p><hr><h3 id="游戏过关"><a href="#游戏过关" class="headerlink" title="游戏过关"></a>游戏过关</h3><p>看大佬writeup才知道1-8依次输入，flag就出来了</p><p><img src="https://i.loli.net/2018/10/09/5bbc21467d804.png" alt=""></p><p>无壳，载入OD中看看，ASCII找一波，然后定位到下面：</p><p><img src="https://i.loli.net/2018/10/09/5bbc227734e32.png" alt=""></p><p>push ebp  就是程序的开头了</p><hr><h3 id="Timer-阿里CTF"><a href="#Timer-阿里CTF" class="headerlink" title="Timer(阿里CTF)"></a>Timer(阿里CTF)</h3><hr><h3 id="逆向入门"><a href="#逆向入门" class="headerlink" title="逆向入门"></a>逆向入门</h3><p>也算不上是逆i向了</p><p>先是用IDA打开，Shitf+F12什么也没有，然后用notepad++看看</p><p><img src="https://i.loli.net/2018/10/09/5bbcbdb82dcfa.png" alt=""></p><p>发现base64转图片，转换得到一个二维码：</p><p><img src="https://i.loli.net/2018/10/09/5bbcbe007e4fd.png" alt=""></p><p>扫码得到flag:</p><p>bugku{inde_9882ihsd8-0}</p><hr><h3 id="love"><a href="#love" class="headerlink" title="love"></a>love</h3><p>IDA中打开，Shitf+F12</p><p><img src="https://i.loli.net/2018/10/09/5bbcc3370ceb9.png" alt=""></p><p>接着F5得到伪代码：</p><p><img src="https://i.loli.net/2018/10/09/5bbcc89ace250.png" alt=""></p><ul><li>第一次加密从前面的字符串中也能够得出是base64加密</li><li>第二次就是ASCII值加一下了</li><li>最后与Str2进行比较，如果一样就输出right flag!</li></ul><p>那么只要你过来将Str2你过来操作就可以了</p><p><img src="https://i.loli.net/2018/10/09/5bbcc3995e8ce.png" alt=""></p><p>于是用python脚本跑起来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="LoopAndLoop-阿里CTF"><a href="#LoopAndLoop-阿里CTF" class="headerlink" title="LoopAndLoop(阿里CTF)"></a>LoopAndLoop(阿里CTF)</h3><hr><h3 id="easy-100-LCTF"><a href="#easy-100-LCTF" class="headerlink" title="easy-100(LCTF)"></a>easy-100(LCTF)</h3><hr><h3 id="SafeBox-NJCTF"><a href="#SafeBox-NJCTF" class="headerlink" title="SafeBox(NJCTF)"></a>SafeBox(NJCTF)</h3><hr><h3 id="Mountain-climbing"><a href="#Mountain-climbing" class="headerlink" title="Mountain climbing"></a>Mountain climbing</h3><hr><h3 id="Take-the-maze"><a href="#Take-the-maze" class="headerlink" title="Take the maze"></a>Take the maze</h3><hr><h3 id="easyeasy-200-LCTF"><a href="#easyeasy-200-LCTF" class="headerlink" title="easyeasy-200(LCTF)"></a>easyeasy-200(LCTF)</h3><hr><h3 id="easycrack-100-NJCTF"><a href="#easycrack-100-NJCTF" class="headerlink" title="easycrack-100(NJCTF)"></a>easycrack-100(NJCTF)</h3><hr><h3 id="LittleRotatorGame-NJCTF"><a href="#LittleRotatorGame-NJCTF" class="headerlink" title="LittleRotatorGame(NJCTF)"></a>LittleRotatorGame(NJCTF)</h3><p>待更新……</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/10/09/5bbc1b4048f82.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="ctf" scheme="https://yoloyanng.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>数模学习—-day1</title>
    <link href="https://yoloyanng.github.io/2018/10/08/%E6%95%B0%E6%A8%A1%E5%AD%A6%E4%B9%A0%E2%80%94-day1/"/>
    <id>https://yoloyanng.github.io/2018/10/08/数模学习—-day1/</id>
    <published>2018-10-07T16:00:00.000Z</published>
    <updated>2018-10-09T14:24:59.279Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/10/09/5bbc03777cf45.jpeg" alt=""></p><a id="more"></a><h2 id="MATLAB入门"><a href="#MATLAB入门" class="headerlink" title="MATLAB入门"></a>MATLAB入门</h2><ul><li><p>加（+）、减（—）、乘（*）、除（/  ,\)没什么特别的，主要是这个除法</p><p>2\4表示    4除以2</p><p>2/4表示    2除以4</p></li></ul><ul><li><img src="https://i.loli.net/2018/10/08/5bbb724c00ac4.png" alt=""></li></ul><h3 id="Point1"><a href="#Point1" class="headerlink" title="Point1"></a>Point1</h3><p>计算下面式子的逼近过程</p><p><img src="https://i.loli.net/2018/10/09/5bbc119b949d3.png" alt=""></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">1</span>;                     <span class="comment">%x值输入          </span></span><br><span class="line"><span class="built_in">sin</span>(x)                   <span class="comment">%输出sinx </span></span><br><span class="line">a1=x^(<span class="number">2</span>*<span class="number">1</span><span class="number">-1</span>)/<span class="built_in">factorial</span>(<span class="number">2</span>*<span class="number">1</span><span class="number">-1</span>)      <span class="comment">%一次部分和 </span></span><br><span class="line">a2=a1-x^(<span class="number">2</span>*<span class="number">2</span><span class="number">-1</span>)/<span class="built_in">factorial</span>(<span class="number">2</span>*<span class="number">2</span><span class="number">-1</span>)   <span class="comment">%二次部分和 </span></span><br><span class="line">a3=a2+x^(<span class="number">2</span>*<span class="number">3</span><span class="number">-1</span>)/<span class="built_in">factorial</span>(<span class="number">2</span>*<span class="number">3</span><span class="number">-1</span>)   <span class="comment">%三次部分和 </span></span><br><span class="line">a4=a3-x^(<span class="number">2</span>*<span class="number">4</span><span class="number">-1</span>)/<span class="built_in">factorial</span>(<span class="number">2</span>*<span class="number">4</span><span class="number">-1</span>)   <span class="comment">%四次部分和</span></span><br><span class="line">a5=a4+x^(<span class="number">2</span>*<span class="number">5</span><span class="number">-1</span>)/<span class="built_in">factorial</span>(<span class="number">2</span>*<span class="number">5</span><span class="number">-1</span>)   <span class="comment">%五次部分和</span></span><br><span class="line">a6=a5-x^(<span class="number">2</span>*<span class="number">6</span><span class="number">-1</span>)/<span class="built_in">factorial</span>(<span class="number">2</span>*<span class="number">6</span><span class="number">-1</span>)   <span class="comment">%六次部分和</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/10/08/5bbb791458971.png" alt=""></p><hr><h3 id="point2"><a href="#point2" class="headerlink" title="point2"></a>point2</h3><p>利用下式求解<strong>π</strong></p><p><img src="https://i.loli.net/2018/10/09/5bbc11d35e132.png" alt=""></p><blockquote><p>待学会后在更新</p></blockquote><hr><h3 id="Point3-矩阵和数组的表示"><a href="#Point3-矩阵和数组的表示" class="headerlink" title="Point3  矩阵和数组的表示"></a>Point3  矩阵和数组的表示</h3><p>用[]括起来，” ; “ 分割开每一行，每行使用空格或” , “ 进行分割</p><p><img src="https://i.loli.net/2018/10/08/5bbb7d31b9d4d.png" alt=""></p><hr><h3 id="Point4-等量元素向量"><a href="#Point4-等量元素向量" class="headerlink" title="Point4   等量元素向量"></a>Point4   等量元素向量</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vec1=<span class="number">10</span>:<span class="number">5</span>:<span class="number">61</span>      <span class="comment">%10为起点，5为步长（可以为负数，缺省时默认为1），61为终止</span></span><br><span class="line">vec2=<span class="built_in">linspace</span>(<span class="number">10</span>,<span class="number">60</span>,<span class="number">11</span>)   <span class="comment">%10为起点，60为终点，11为生成向量长度</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/10/08/5bbb7e58b1742.png" alt=""></p><hr><h3 id="Point5-矩阵四则运算"><a href="#Point5-矩阵四则运算" class="headerlink" title="Point5   矩阵四则运算"></a>Point5   矩阵四则运算</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">A=[<span class="number">5</span> <span class="number">6</span>;<span class="number">8</span> <span class="number">9</span>];</span><br><span class="line">B=[<span class="number">4</span> <span class="number">6</span>;<span class="number">3</span> <span class="number">8</span>];</span><br><span class="line">A+B</span><br><span class="line">A-B</span><br><span class="line">A*B</span><br><span class="line">A/B</span><br><span class="line">A.*B  <span class="comment">%矩阵A中的元素与矩阵B中的元素按位置依次相乘</span></span><br><span class="line">A./B  <span class="comment">%%矩阵A中的元素与矩阵B中的元素按位置依次相除</span></span><br><span class="line">A^<span class="number">2</span>   <span class="comment">%矩阵A的2次方</span></span><br><span class="line">A.^<span class="number">2</span>  <span class="comment">%矩阵A的各个元素进行2次方</span></span><br></pre></td></tr></table></figure><hr><h3 id="Point6-矩阵的寻址，添加"><a href="#Point6-矩阵的寻址，添加" class="headerlink" title="Point6   矩阵的寻址，添加"></a>Point6   矩阵的寻址，添加</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">A=[<span class="number">1</span>:<span class="number">5</span>;<span class="number">6</span>:<span class="number">10</span>;<span class="number">11</span>:<span class="number">15</span>;<span class="number">16</span>:<span class="number">20</span>;<span class="number">21</span>:<span class="number">25</span>;<span class="number">26</span>:<span class="number">30</span>]; </span><br><span class="line">B=[A,ones(size(A,<span class="number">1</span>),<span class="number">1</span>)]; </span><br><span class="line"><span class="comment">%ones(size(x,1),1)表示生成一个行数与x一致，列数等于1且所有元素都是1的矩阵</span></span><br><span class="line">C=[A;<span class="number">31</span>:<span class="number">35</span>];     <span class="comment">%添加一行31到35</span></span><br><span class="line">D=A(<span class="number">1</span>:<span class="number">2</span>,:);      <span class="comment">%取A的1、2行              </span></span><br><span class="line">E=A(:,<span class="number">1</span>:<span class="number">2</span>);      <span class="comment">%取A的1、2列</span></span><br><span class="line">F=A(<span class="number">2</span>,<span class="number">3</span>);        <span class="comment">%取A的第2列第3行元素</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/10/09/5bbc03777cf45.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="数学建模" scheme="https://yoloyanng.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>Docker-Learning_day1</title>
    <link href="https://yoloyanng.github.io/2018/10/07/Docker-Learning-day1/"/>
    <id>https://yoloyanng.github.io/2018/10/07/Docker-Learning-day1/</id>
    <published>2018-10-06T16:00:00.000Z</published>
    <updated>2018-10-09T02:06:19.938Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在此前，一直想要去学习一下docker这个到现在依旧陌生的东西，或者是心血来潮，那么就一鼓作气学懂一二吧</p></blockquote><p><img src="https://i.loli.net/2018/10/09/5bbc0d0b529a3.png" alt=""></p><a id="more"></a><h3 id="0x00-什么是Docker"><a href="#0x00-什么是Docker" class="headerlink" title="0x00 什么是Docker?"></a>0x00 什么是Docker?</h3><blockquote><p>百度百科</p></blockquote><p>​    Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。</p><p>​    Docker 使用客户端-服务器 (C/S) 架构模式，使用远程API来管理和创建Docker容器。Docker 容器通过 Docker 镜像来创建。容器与镜像的关系类似于面向对象编程中的对象与类。</p><hr><h3 id="Docker-的优点"><a href="#Docker-的优点" class="headerlink" title="Docker 的优点"></a>Docker 的优点</h3><blockquote><p>菜鸟教程</p></blockquote><ul><li><p><strong>1、简化程序：</strong><br>Docker 让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，便可以实现虚拟化。Docker改变了虚拟化的方式，使开发者可以直接将自己的成果放入Docker中进行管理。方便快捷已经是 Docker的最大优势，过去需要用数天乃至数周的    任务，在Docker容器的处理下，只需要数秒就能完成。</p></li><li><p><strong>2、避免选择恐惧症：</strong><br>如果你有选择恐惧症，还是资深患者。Docker 帮你    打包你的纠结！比如 Docker 镜像；Docker 镜像中包含了运行环境和配置，所以 Docker 可以简化部署多种应用实例工作。比如 Web 应用、后台应用、数据库应用、大数据应用比如 Hadoop 集群、消息队列等等都可以打包成一个镜像部署。</p></li><li><p><strong>3、节省开支：</strong><br>一方面，云计算时代到来，使开发者不必为了追求效果而配置高额的硬件，Docker 改变了高性能必然高价格的思维定势。Docker 与云的结合，让云空间得到更充分的利用。不仅解决了硬件管理的问题，也改变了虚拟化的方式。</p></li></ul><hr><h3 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h3><blockquote><p>安装环境：ubuntu16.04 </p></blockquote><ol><li><p>Docker要求Ubuntu系统的内核版本高于3.10，所以来看一下：</p><p><img src="https://i.loli.net/2018/10/07/5bb9e8794bc72.png" alt=""></p></li><li><p>更新一下apt索引:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure></li><li><p>如果在此前已经安装过较旧版本的docker,使用下面的命令卸载：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove docker docker-engine docker.io</span><br></pre></td></tr></table></figure></li><li><p>允许 apt 通过HTTPS使用存储库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    software-properties-common</span><br></pre></td></tr></table></figure></li><li><p>添加Docker的官方GPG密钥:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure></li><li><p>验证现在拥有带指纹的密钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key fingerprint 0EBFCD88</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在此前，一直想要去学习一下docker这个到现在依旧陌生的东西，或者是心血来潮，那么就一鼓作气学懂一二吧&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/10/09/5bbc0d0b529a3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://yoloyanng.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>南邮CTF_re_writeup</title>
    <link href="https://yoloyanng.github.io/2018/10/06/%E5%8D%97%E9%82%AECTF-re-writeup/"/>
    <id>https://yoloyanng.github.io/2018/10/06/南邮CTF-re-writeup/</id>
    <published>2018-10-05T16:00:00.000Z</published>
    <updated>2018-10-09T02:19:49.749Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/10/09/5bbc1033223c5.jpg" alt=""></p><a id="more"></a><h2 id="Hello-RE"><a href="#Hello-RE" class="headerlink" title="Hello RE!"></a>Hello RE!</h2><p>直接把题目放到ida中打开</p><p><img src="https://i.loli.net/2018/10/04/5bb5728d5fa66.png" alt=""></p><p>然后F5反编译，发现没有反应，百度得知用的是64位的ida打开的32位的程序，无法反编译，遂换成32位，F5之后如下：</p><p><img src="https://i.loli.net/2018/10/04/5bb5730078f3e.png" alt=""></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> ( <span class="built_in">scanf</span>(<span class="string">"%s"</span>, v4) != <span class="number">-1</span> &amp;&amp; <span class="built_in">strcmp</span>(v4, (<span class="keyword">const</span> <span class="keyword">char</span> *)&amp;v5) )</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"flag错误。再试试？\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"flag正确。\n"</span>);</span><br></pre></td></tr></table></figure><p>所以在运行是不会有flag输出的，然后看看题目中的说明：</p><ul><li>PS:IDA里面按R可以把奇怪的数字变成字符串</li></ul><p>所以对每个数字串按R得到下面的倒序的flag:</p><p><img src="https://i.loli.net/2018/10/04/5bb5761421536.png" alt=""></p><p><code>flag{Welcome_To_RE_World!}</code></p><hr><h2 id="ReadAsm2"><a href="#ReadAsm2" class="headerlink" title="ReadAsm2"></a>ReadAsm2</h2><p><a href="https://www.cnblogs.com/Chesky/p/nuptzj_re_writeup.html" target="_blank" rel="noopener">参考文章</a></p><blockquote><p>ax (accumulator)···························可用于存放函数返回值<br>bp (base pointer)···························用于存放执行中的函数对应的栈帧的栈底地址<br>sp (stack poinger)··························用于存放执行中的函数对应的栈帧的栈顶地址<br>ip (instruction pointer)··················指向当前执行指令的下一条指令</p><p><strong>前缀加上 r 表示 64 位， e 表示 32 位</strong></p><p>word : 表示字、q：四字 、d：双字</p><p>ptr: 指针（pointer）<br>没有寄存器名时， X ptr 指明内存单元的长度，X 在汇编指令中可以为word 或 byte </p><p>内存地址：[ ]</p><p>movsxd ：扩展至零指令</p><p> xor：逻辑异或运算指令</p><p>jle：小于等于时转移</p></blockquote><p><img src="https://i.loli.net/2018/10/04/5bb5ed075bffe.png" alt=""></p><p>python3代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">input = [<span class="number">0x67</span>,<span class="number">0x6e</span>,<span class="number">0x62</span>,<span class="number">0x63</span>,<span class="number">0x7e</span>,<span class="number">0x74</span>, <span class="number">0x62</span>, <span class="number">0x69</span>, <span class="number">0x6d</span>, <span class="number">0x55</span>, <span class="number">0x6a</span>, <span class="number">0x7f</span>, <span class="number">0x60</span>, <span class="number">0x51</span>, <span class="number">0x66</span>, <span class="number">0x63</span>, <span class="number">0x4e</span>, <span class="number">0x66</span>, <span class="number">0x7b</span>,<span class="number">0x71</span>, <span class="number">0x4a</span>, <span class="number">0x74</span>, <span class="number">0x76</span>, <span class="number">0x6b</span>, <span class="number">0x70</span>, <span class="number">0x79</span>, <span class="number">0x66</span> , <span class="number">0x1c</span>]</span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">28</span>):</span><br><span class="line">    flag = flag + chr(input[x<span class="number">-1</span>]^ x)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>运行得到f：flag{read_asm_is_the_basic}</p><hr><h2 id="Py交易"><a href="#Py交易" class="headerlink" title="Py交易"></a>Py交易</h2><p>下载得到的一个pyc文件，通过python的反编译得到如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span><span class="params">(message)</span>:</span></span><br><span class="line">    s = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> message:</span><br><span class="line">        x = ord(i) ^ <span class="number">32</span></span><br><span class="line">        x = x + <span class="number">16</span></span><br><span class="line">        s += chr(x)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> base64.b64encode(s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">correct = <span class="string">'XlNkVmtUI1MgXWBZXCFeKY+AaXNt'</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Input flag:'</span></span><br><span class="line">flag = raw_input()</span><br><span class="line"><span class="keyword">if</span> encode(flag) == correct:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'correct'</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'wrong'</span></span><br></pre></td></tr></table></figure><p>分析这段代码很容易知道，只要对correct中的字符串倒着执行上面的代码得到的就是最后的flag了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line">s=<span class="string">'XlNkVmtUI1MgXWBZXCFeKY+AaXNt'</span></span><br><span class="line">s=base64.b64decode(s)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">x=ord(i)<span class="number">-16</span></span><br><span class="line">x=x^<span class="number">32</span></span><br><span class="line">flag+=chr(x)</span><br><span class="line"><span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure><p>最后输出flag：nctf{d3c0mpil1n9_PyC}</p><hr><h2 id="WxyVM1"><a href="#WxyVM1" class="headerlink" title="WxyVM1"></a>WxyVM1</h2><p>下载得到一个无后缀名的文件，那么在010Editor中打开得到：</p><p><img src="https://i.loli.net/2018/10/04/5bb604396b533.png" alt=""></p><p>是一个ELF文件，在这里不作过多说明了，在linux中打开执行，，，，</p><p>发现不会Linux的GDB怎么用啊！！！！那就算了，老实用IDA打开吧。。。</p><p>F5 得到伪代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">__int64 __<span class="function">fastcall <span class="title">main</span><span class="params">(__int64 a1, <span class="keyword">char</span> **a2, <span class="keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> v4; <span class="comment">// [sp+Bh] [bp-5h]@1</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> i; <span class="comment">// [sp+Ch] [bp-4h]@3</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">"[WxyVM 0.0.1]"</span>);  </span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">"input your flag:"</span>);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%s"</span>, &amp;byte_604B80);   <span class="comment">//将输入的flag值保存到byte_604B80</span></span><br><span class="line">  v4 = <span class="number">1</span>;</span><br><span class="line">  sub_4005B6();        <span class="comment">//调用函数</span></span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">strlen</span>(&amp;byte_604B80) != <span class="number">24</span> )  <span class="comment">//判断flag的长度是不是等于24</span></span><br><span class="line">    v4 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">23</span>; ++i )       <span class="comment">//for循环</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( *(&amp;byte_604B80 + i) != dword_601060[i] )     </span><br><span class="line">        <span class="comment">//比较604B80加上i的地址处保存的值与601060处的值</span></span><br><span class="line">      v4 = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( v4 )</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"correct"</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"wrong"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">__<span class="function">int64 <span class="title">sub_4005B6</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v0;   <span class="comment">// ST04_4@3</span></span><br><span class="line">  __int64 result;    <span class="comment">// rax@3</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> i;     <span class="comment">// [sp+0h] [bp-10h]@1</span></span><br><span class="line">  <span class="keyword">char</span> v3;          <span class="comment">// [sp+8h] [bp-8h]@3</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">14999</span>; i += <span class="number">3</span> )  <span class="comment">//15000个元素，3个一组</span></span><br><span class="line">  &#123;</span><br><span class="line">    v0 = byte_6010C0[(<span class="keyword">signed</span> __int64)i];</span><br><span class="line">    v3 = byte_6010C0[(<span class="keyword">signed</span> __int64)(i + <span class="number">2</span>)];</span><br><span class="line">    result = v0;</span><br><span class="line">    <span class="keyword">switch</span> ( v0 )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1u</span>:</span><br><span class="line">        result = byte_6010C0[(<span class="keyword">signed</span> __int64)(i + <span class="number">1</span>)];</span><br><span class="line">        *(&amp;byte_604B80 + result) += v3;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2u</span>:</span><br><span class="line">        result = byte_6010C0[(<span class="keyword">signed</span> __int64)(i + <span class="number">1</span>)];</span><br><span class="line">        *(&amp;byte_604B80 + result) -= v3;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">3u</span>:</span><br><span class="line">        result = byte_6010C0[(<span class="keyword">signed</span> __int64)(i + <span class="number">1</span>)];</span><br><span class="line">        *(&amp;byte_604B80 + result) ^= v3;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">4u</span>:</span><br><span class="line">        result = byte_6010C0[(<span class="keyword">signed</span> __int64)(i + <span class="number">1</span>)];</span><br><span class="line">        *(&amp;byte_604B80 + result) *= v3;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">5u</span>:</span><br><span class="line">        result = byte_6010C0[(<span class="keyword">signed</span> __int64)(i + <span class="number">1</span>)];</span><br><span class="line">        *(&amp;byte_604B80 + result) ^= *(&amp;byte_604B80 + byte_6010C0[(<span class="keyword">signed</span> __int64)(i + <span class="number">2</span>)]);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/10/04/5bb61162ed854.png" alt=""></p><ul><li><p>数组各元素的地址逐个间隔4位，因为 dword 为4字节型，所以多余的FF，00不读入</p></li><li><p>得到 dword_601060 = [C4,34,22,B1,D3,11,97,7,DB,37,C4,6,1D,FC,5B,ED,98,DF,94,D8,B3,84,CC,8]</p></li><li><p>byte_6010C0 数组的 15000个元素按顺序三个一组分成5000组子序列，分别是v0、result、v3</p></li><li><p>v0检测那种运算（加、减，乘，异或），result选择哪一位进行运算，v3是运算数</p></li><li><p>在怎么把从0x6010c0至之后的15000个字节截取出来，弄了半天，经过各种百度，Google之后找到办法。</p><p>在IDA中的HEX VIEW中选中需要截取的部分另存为文件即可</p></li></ul><p>得到C语言脚本如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> filename <span class="meta-string">"G:\\HTR"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,flen;</span><br><span class="line">    <span class="keyword">char</span> *p;</span><br><span class="line">    FILE*fp;</span><br><span class="line">    <span class="keyword">int</span> result,a;</span><br><span class="line">    <span class="keyword">char</span> input[<span class="number">24</span>]=&#123;<span class="number">0xC4</span>,<span class="number">0X34</span>,<span class="number">0X22</span>,<span class="number">0XB1</span>,<span class="number">0XD3</span>,<span class="number">0X11</span>,<span class="number">0X97</span>,<span class="number">0X7</span>,<span class="number">0XDB</span>,<span class="number">0X37</span>,<span class="number">0XC4</span>,<span class="number">0X6</span>,<span class="number">0X1D</span>,<span class="number">0XFC</span>,<span class="number">0X5B</span>,<span class="number">0XED</span>,<span class="number">0X98</span>,<span class="number">0XDF</span>,<span class="number">0X94</span>,<span class="number">0XD8</span>,<span class="number">0XB3</span>,<span class="number">0X84</span>,<span class="number">0XCC</span>,<span class="number">0X8</span>&#125;;</span><br><span class="line"></span><br><span class="line">    fp=fopen(filename,<span class="string">"rb"</span>);    <span class="comment">//以二进制方式读文件 </span></span><br><span class="line"></span><br><span class="line">    fseek(fp,<span class="number">0L</span>,SEEK_END);   <span class="comment">//意思是把fp文件读写位置指针从文件尾倒数0个字节，即文件尾部 </span></span><br><span class="line">    flen=ftell(fp);         <span class="comment">//获取文件的当前读写位置; </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d个字节\n"</span>,flen);     <span class="comment">//打印文件一共多少个字节 </span></span><br><span class="line">    </span><br><span class="line">p=(<span class="keyword">char</span> *)<span class="built_in">malloc</span>(flen+<span class="number">1</span>);  </span><br><span class="line">    <span class="keyword">if</span>(p==<span class="literal">NULL</span>)&#123;</span><br><span class="line">       fclose(fp);</span><br><span class="line">       <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    fseek(fp,<span class="number">0L</span>,SEEK_SET);  <span class="comment">//定位到文件开头 </span></span><br><span class="line">    fread(p,flen,<span class="number">1</span>,fp);     <span class="comment">//一次性读取全部内容 </span></span><br><span class="line">    p[flen]=<span class="number">0</span>;              <span class="comment">//字符串结束标志 </span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">15000</span>;i&gt;=<span class="number">0</span>;i-=<span class="number">3</span>)&#123;</span><br><span class="line">        <span class="keyword">switch</span>(p[i])&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:result=p[i+<span class="number">1</span>];</span><br><span class="line">                    input[result]-=p[i+<span class="number">2</span>];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:result=p[i+<span class="number">1</span>];</span><br><span class="line">                    input[result]+=p[i+<span class="number">2</span>];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:result=p[i+<span class="number">1</span>];</span><br><span class="line">                    input[result]^=p[i+<span class="number">2</span>];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:result=p[i+<span class="number">1</span>];</span><br><span class="line">                    input[result]/=p[i+<span class="number">2</span>];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:result=p[i+<span class="number">1</span>];</span><br><span class="line">                    a=p[i+<span class="number">2</span>];</span><br><span class="line">                    input[result]^=input[a];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:<span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"==========================\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">24</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,input[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行得到flag：nctf{Embr4ce_Vm_j0in_R3}</p><hr><h2 id="maze"><a href="#maze" class="headerlink" title="maze"></a>maze</h2><p>在IDA中打开得到伪代码如下：</p><p><img src="https://i.loli.net/2018/10/08/5bbaef3630ef6.png" alt=""></p><p>代码太长了，切换到图表来看看：</p><p><img src="https://i.loli.net/2018/10/08/5bbaf0b1e2481.png" alt=""></p><p>可以看到   “<strong>.</strong>“ ,”<strong>0</strong>“,”<strong>o</strong>“ , “<strong>O</strong>“,跳转到不同位置</p><blockquote><p><strong>”.“</strong>     ：</p></blockquote><p><img src="https://i.loli.net/2018/10/08/5bbaf228a2e0f.png" alt=""></p><p><img src="https://i.loli.net/2018/10/06/5bb8c8070f2eb.png" alt=""></p><p>分析一波代码：</p><p><strong>if ( strlen(&amp;s1) != 24 || strncmp(&amp;s1, “nctf{“, 5uLL) || *(&amp;byte_6010BF + 24) != 125 )</strong></p><ul><li>flag的长度为24. 前五个字符为<strong>nctf{</strong></li><li></li></ul><hr><h2 id="你大概需要一个优秀的mac"><a href="#你大概需要一个优秀的mac" class="headerlink" title="你大概需要一个优秀的mac"></a>你大概需要一个优秀的mac</h2><p>确实我也没有MAC，只能再次找到IDA ，找到main函数，F5大法查看伪代码：</p><p><img src="https://i.loli.net/2018/10/07/5bba2a39e24ef.png" alt=""></p><p><img src="https://i.loli.net/2018/10/07/5bba2a76cbc25.png" alt=""></p><p>分析func1、xfun1、xfun2、xfun3、xfun4、xfun5函数得知这几个函数的功能就是：</p><blockquote><p>func1：每个字符与0xDE异或</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; *(_BYTE *)(a1 + i) ^= <span class="number">0xDE</span>u;  <span class="comment">//将a1+i转换为指向字节的指针，该地址处字节的值与0xDE异或</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>xfun1：flag前10位与 0xAD异或</p><p>xfun2：接下来10位与 0xBE异或</p><p>xfun3：接下来10位与 0xEF异或</p><p>xfun4：接下来10位与 0xAB异或</p><p>xfun5：接下来16位与 0xEF异或</p><p>check：将异或后的flag与10000ED0处的56个字符进行比较</p></blockquote><p><img src="https://i.loli.net/2018/10/08/5bba2ffc3a911.png" alt=""></p><p>所以只需要逆向操作就可以了</p><p>得到Python3脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">num=[<span class="number">0x15</span>,<span class="number">0x1F</span>,<span class="number">0x12</span>,<span class="number">0x14</span>,<span class="number">0x8</span>,<span class="number">0x3A</span>,<span class="number">0x46</span>,<span class="number">0x2C</span>,<span class="number">0x7</span>,<span class="number">0x1B</span>,<span class="number">0x51</span>,<span class="number">0x13</span>,<span class="number">0x3F</span>,<span class="number">0x57</span>,<span class="number">0x8</span>,<span class="number">0x5</span>,<span class="number">0x3F</span>,<span class="number">0x30</span>,<span class="number">0x32</span>,<span class="number">0x51</span>,<span class="number">0x52</span>,<span class="number">0x2</span>,<span class="number">0x6E</span>,<span class="number">0x78</span>,<span class="number">0x16</span>,<span class="number">0x7C</span>,<span class="number">0x6E</span>,<span class="number">0x61</span>,<span class="number">0x70</span>,<span class="number">0x48</span>,<span class="number">0x1C</span>,<span class="number">0x3B</span>,<span class="number">0x32</span>,<span class="number">0x2A</span>,<span class="number">0x13</span>,<span class="number">0x45</span>,<span class="number">0x7</span>,<span class="number">0x2A</span>,<span class="number">0x18</span>,<span class="number">0x0C</span>,<span class="number">0x6E</span>,<span class="number">0x41</span>,<span class="number">0x70</span>,<span class="number">0x4</span>,<span class="number">0x6</span>,<span class="number">0x6E</span>,<span class="number">0x5C</span>,<span class="number">0x0</span>,<span class="number">0x42</span>,<span class="number">0x45</span>,<span class="number">0x70</span>,<span class="number">0x5A</span>,<span class="number">0x2</span>,<span class="number">0x4</span>,<span class="number">0x0E</span>,<span class="number">0x4C</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">num[i]=num[i]^<span class="number">0xAD</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>,<span class="number">20</span>):</span><br><span class="line">num[i]=num[i]^<span class="number">0xBE</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">20</span>,<span class="number">30</span>):</span><br><span class="line">num[i]=num[i]^<span class="number">0xEF</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">30</span>,<span class="number">40</span>):</span><br><span class="line">num[i]=num[i]^<span class="number">0xAB</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">40</span>,<span class="number">56</span>):</span><br><span class="line">num[i]=num[i]^<span class="number">0xEF</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">56</span>):</span><br><span class="line">num[i]=num[i]^<span class="number">0xDE</span></span><br><span class="line">print(chr(num[i]),end=<span class="string">""</span>)</span><br></pre></td></tr></table></figure><p>运行得到flag:</p><p>flag{I5_th1s_7he_PR1c3_I’M_PAyiNG_f0r_my_pA57_m1stAk35?}</p><hr><h2 id="WxyVM-2"><a href="#WxyVM-2" class="headerlink" title="WxyVM 2"></a>WxyVM 2</h2><h2 id="HomuraVM"><a href="#HomuraVM" class="headerlink" title="HomuraVM"></a>HomuraVM</h2><h2 id="480小时精通C"><a href="#480小时精通C" class="headerlink" title="480小时精通C++"></a>480小时精通C++</h2><h2 id="simple-machine"><a href="#simple-machine" class="headerlink" title="simple machine"></a>simple machine</h2><h2 id="Single"><a href="#Single" class="headerlink" title="Single"></a>Single</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/10/09/5bbc1033223c5.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://yoloyanng.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>几道题目了解Wireshark</title>
    <link href="https://yoloyanng.github.io/2018/10/01/%E5%87%A0%E9%81%93%E9%A2%98%E7%9B%AE%E4%BA%86%E8%A7%A3Wireshark/"/>
    <id>https://yoloyanng.github.io/2018/10/01/几道题目了解Wireshark/</id>
    <published>2018-10-01T14:47:46.000Z</published>
    <updated>2018-10-09T02:13:31.024Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/10/09/5bbc0eb3d1f41.jpg" alt=""></p><a id="more"></a><h2 id="CTF题目（bugku）"><a href="#CTF题目（bugku）" class="headerlink" title="CTF题目（bugku）"></a>CTF题目（bugku）</h2><h3 id="0x00-搜索"><a href="#0x00-搜索" class="headerlink" title="0x00 搜索"></a>0x00 搜索</h3><p><img src="https://i.loli.net/2018/09/10/5b961890e687c.jpg" alt="blob.jpg"> <a href="http://ctf.bugku.com/files/e0b57d15b3f8e6190e72987177da1ffd/key.pcapng" target="_blank" rel="noopener">题目下载地址</a></p><blockquote><p>非正常套路：用文本编辑器打开文件，CTRL+F搜索一波关键字，flag或者key等</p></blockquote><p><img src="https://i.loli.net/2018/09/10/5b961962b1c82.jpg" alt="blob.jpg"></p><blockquote><p>正常做法：wireshark分析</p></blockquote><ul><li>直接搜索key、flag是找不到的，既然题目说flag被盗，那么就试试shell、pass、php、asp，post字符串查找等</li></ul><p><img src="https://i.loli.net/2018/09/10/5b961c097f9c4.jpg" alt="blob.jpg"></p><ul><li>找到可疑数据包，跟进最终TCP流，搜索一波</li></ul><p><img src="https://i.loli.net/2018/09/10/5b961c36a1cc7.jpg" alt="blob.jpg"> </p><p>更新中……..</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/10/09/5bbc0eb3d1f41.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tools" scheme="https://yoloyanng.github.io/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>binwalk简单说明</title>
    <link href="https://yoloyanng.github.io/2018/10/01/binwalk%E7%AE%80%E5%8D%95%E8%AF%B4%E6%98%8E/"/>
    <id>https://yoloyanng.github.io/2018/10/01/binwalk简单说明/</id>
    <published>2018-10-01T14:39:05.000Z</published>
    <updated>2018-10-09T02:03:35.111Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/10/09/5bbc0c549eeac.png" alt=""></p><a id="more"></a><h4 id="0x00"><a href="#0x00" class="headerlink" title="0x00"></a>0x00</h4><p>Binwalk是一个固件的分析工具，功能十分强大，本文只是提到了一点，更高级的用法还待挖掘中…… Kali linux 自带binwalk ，其他平台安装方法也很简单，这里不再说明</p><h4 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h4><p>再终端输入 binwalk -h来查看一下binwalk的用法</p><p> <img src="https://i.loli.net/2018/09/12/5b986794bfbfa.jpg" alt="blob.jpg"> <img src="https://i.loli.net/2018/09/12/5b9867c15318d.jpg" alt="blob.jpg"> </p><p>在这里一共列举了六个模块： </p><ol><li><p>签名扫描选项 </p></li><li><p>提取选项 </p></li><li><p>熵分析选项</p></li><li><p>二进制 diffing选项 </p></li><li><p>原始压缩选项</p></li><li><p>常规选项</p></li></ol><h4 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h4><p><strong>题目分析</strong> 例如下面的图片 </p><p><img src="https://i.loli.net/2018/09/12/5b986e1aca37b.jpg" alt="blob.jpg"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@Kali:~/桌面# binwalk 123.jpg</span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0             0x0             JPEG image data, JFIF standard 1.01</span><br><span class="line">7549          0x1D7D          RAR archive data, first volume type: MAIN_HEAD</span><br></pre></td></tr></table></figure><p>可以看到图片里头还有一个rar文件 然后使用binwalk把rar文件提取出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@Kali:~/桌面# binwalk -e 123.jpg</span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0             0x0             JPEG image data, JFIF standard 1.01</span><br><span class="line">7549          0x1D7D          RAR archive data, first volume type: MAIN_HEAD</span><br></pre></td></tr></table></figure><p>然后就可以得到提取出来的文件了</p><p> <img src="https://i.loli.net/2018/09/12/5b986e52b676d.jpg" alt="blob.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/10/09/5bbc0c549eeac.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tools" scheme="https://yoloyanng.github.io/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>Over the Wire -Bandit1-16</title>
    <link href="https://yoloyanng.github.io/2018/10/01/Over-the-Wire-Bandiit%E9%97%AF%E5%85%B3/"/>
    <id>https://yoloyanng.github.io/2018/10/01/Over-the-Wire-Bandiit闯关/</id>
    <published>2018-10-01T14:33:47.000Z</published>
    <updated>2018-10-09T02:10:21.128Z</updated>
    
    <content type="html"><![CDATA[<p>[<img src="https://i.loli.net/2018/10/09/5bbc0dfb934dc.jpg" alt=""></p><a id="more"></a><p>linux命令大全](<a href="http://man.linuxde.net" target="_blank" rel="noopener">http://man.linuxde.net</a>)</p><h2 id="Part-one"><a href="#Part-one" class="headerlink" title="Part one"></a>Part one</h2><blockquote><p>bandit1：boJ9jbbUNNfktd78OOpsqOltutMc3MY1 </p><p>bandit2：CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9 (虚文件名) </p><p>bandit3：UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK (文件名中含有空格) </p><p>bandit4：pIwrPrtPN36QITSp3EQaw936yaFoFgAB (隐藏文件)</p><p>bandit5：koReBOKuIDDepwhWk7jZC0RTdopnAYKh （可读文件）</p><p>bandit6：DXjZPULLxYr17uwoI01bNLQbtFemEgo7 (读取文件大小)</p><p>bandit7：HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs （user和group）</p><p>bandit8：cvX2JJa4CFALtqS87jk27qwqGhBM9plV （grep 命令查找）</p><p>bandit9：UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR （sort命令和uniq）</p><p>bandit10：truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk（strings命令和grqp命令）</p><p>bandit11：IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR （base64命令）</p><p>bandit12：5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu （tr命令)</p><p>bandit13：8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL （gzip,tar,xxd,zcat,bzip2,file,cp,mv,mkdir命令) </p><p>bandit14：4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e （ssh命令）</p><p>bandit15：BfMYroe26WYalil77FoDi9qh59eK5xNr （telnet命令）</p><p>bandit16：cluFn7wTiGryunymYOu4RcffSxQluehd （openssl命令, s_client）</p></blockquote><hr><h3 id="虚文件名"><a href="#虚文件名" class="headerlink" title="虚文件名"></a>虚文件名</h3><p>在bash中，“-”即短杠会被解析为stdin，也就是标准输入流 cat - 这条命令会等待你从终端输入字符，然后回显你输入的任何字符，直到输入eof (Ctrl-D)为止。如何摆脱bash的转义呢？ cat ./- 在linux中“.”表示当前目录，紧跟其后的短杆就不会被解析为stdin了。于是就顺利读出了下一个等级的密码。 这种方法有很多误解，因为使用-作为参数引用STDIN / STDOUT即dev/stdin或dev / stdout。所以如果要打开这种类型的文件，你必须指定文件的完整位置，如as ./-。例如。，如果你想查看该文件中的内容，请使用cat ./-</p><hr><h3 id="文件名中的空格"><a href="#文件名中的空格" class="headerlink" title="文件名中的空格"></a>文件名中的空格</h3><p>如何在终端的文件名中键入空格呢？ 答：在空格之前添加反斜杠 所以如果一个文件名中含有空格的话怎么读取文件内容呢？ 例如文件名为： spaces in this filename 方法一：cat “spaces in this filename” 方法二：cat spaces\ in\ this\ filename（反斜杠转义）</p><hr><h3 id="隐藏文件"><a href="#隐藏文件" class="headerlink" title="隐藏文件"></a>隐藏文件</h3><p>在linux中隐藏文件和文件夹比如将目录readme隐藏 <strong>mv readme .readme</strong> (重命名) 还可在建立文件的时候直接以 . 开头 而在linux中显示文件的命令 ls -a  (显示所有文件，包括隐藏文件） ll -a （显示当前目录所有文件、文件夹的详细信息，包括权限、大小、用户、组等） ls -d .*（只显示隐藏文件）</p><hr><h3 id="查找文件大小"><a href="#查找文件大小" class="headerlink" title="查找文件大小"></a>查找文件大小</h3><p>find .-type f -size 1033c</p><blockquote><p>‘.’ 查找当前目录及子目录 “-type f” 指定文件类型为普通文件 “-size 1033c”指定文件大小为1033byte</p></blockquote><hr><h3 id="user和group"><a href="#user和group" class="headerlink" title="user和group"></a>user和group</h3><p><strong>find /-user ‘bandit7’ -group ‘bandit6’ -size 33c</strong></p><blockquote><p>指定文件所属的用户组和用户 “/“表示从根目录开始查找，后面三个参数就是用户，用户组，文件大小</p></blockquote><p>这里有一个问题就是find查找的时候会有很多Permission denied的ji结果，怎么过滤掉呢？ 使用:grep -v “Permission denied” 并没有效果 于是可以使用： find / -user “bandit7” -group “bandit6” -size 33c 2&gt;/dev/null 把错误信息写入黑洞文件（dev/null） 0表示标准输入， 1表示标准输出， 2表示标准错误 <a href="https://www.cnblogs.com/lishihai/p/7986565.html" target="_blank" rel="noopener">dev/null dev/zero</a></p><hr><h3 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h3><p><a href="http://man.linuxde.net" target="_blank" rel="noopener">grep命令1</a> </p><p><a href="http://www.runoob.com/linux/linux-tutorial.html" target="_blank" rel="noopener">grep命令2</a></p><hr><h3 id="sort和uniq"><a href="#sort和uniq" class="headerlink" title="sort和uniq"></a>sort和uniq</h3><p>sort命令是在Linux里非常有用，它将文件进行排序，并将排序结果标准输出。sort命令既可以从特定的文件，也可以从stdin中获取输入 uniq命令用于报告或忽略文件中的重复行，一般与sort命令结合使用</p><blockquote><p>删除重重复行</p></blockquote><p><strong>uniq file.txt sort file.txt | uniq sort -u file.txt</strong></p><blockquote><p>只显示单一行</p></blockquote><p><strong>uniq -u file.txt sort file.txt | uniq -u</strong> 更多内容请访问上方提到的网站</p><hr><h3 id="strings命令"><a href="#strings命令" class="headerlink" title="strings命令"></a>strings命令</h3><p>strings命令在对象文件或二进制文件中查找可打印的字符串。字符串是4个或更多可打印字符的任意序列，以换行符或空字符结束。 strings命令对识别随机对象文件很有用 strings data.txt | grqp -s “==”</p><hr><h3 id="base64命令"><a href="#base64命令" class="headerlink" title="base64命令"></a>base64命令</h3><p>用法：base64 [选项] [文件] 使用 base64 编码/解码文件或标准输入输出。 -d, —decode 解码数据 -i, —ignore-garbag 解码时忽略非字母字符 -w, —wrap=字符数 在指定的字符数后自动换行(默认为76)，0 为禁用自动换行 echo test|base64 #加密(dGVzdAo=) echo dGVzdAo= |base64 -d #解密(test) <a href="http://soft.chinabyte.com/247/8817247.shtml" target="_blank" rel="noopener">base64命令</a></p><hr><h3 id="tr命令"><a href="#tr命令" class="headerlink" title="tr命令"></a>tr命令</h3><p>cat data.txt|tr a-zA-Z n-za-mN-ZA-M 就是a-z对应换成n-z a-m 大写亦然 rot13也可以在线解密 tr命令可以对来自标准输入的字符进行替换、压缩和删除。它可以将一组字符变成另一组字符，经常用来编写优美的单行命令，作用很强大 -c或——complerment：取代所有不属于第一字符集的字符； -d或——delete：删除所有属于第一字符集的字符； -s或—squeeze-repeats：把连续重复的字符以单独一个字符表示； -t或—truncate-set1：先删除第一字符集较第二字符集多出的字符</p><hr><h3 id="gzip命令"><a href="#gzip命令" class="headerlink" title="gzip命令"></a>gzip命令</h3><p>gzip命令用来压缩文件。gzip是个使用广泛的压缩程序，文件经它压缩过后，其名称后面会多处“.gz”扩展名。 gzip是在Linux系统中经常使用的一个对文件进行压缩和解压缩的命令，既方便又好用。gzip不仅可以用来压缩大的、较少使用的文件以节省磁盘空间，还可以和tar命令一起构成Linux操作系统中比较流行的压缩文件格式。据统计，gzip命令对文本文件有60%～70%的压缩率。减少文件大小有两个明显的好处，一是可以减少存储空间，二是通过网络传输文件时，可以减少传输的时间</p><p> <a href="http://man.linuxde.net/gzip" target="_blank" rel="noopener">gzip命令1</a> </p><p><a href="http://www.runoob.com/linux/linux-comm-gzip.html" target="_blank" rel="noopener">gzip命令2</a></p><hr><h3 id="xxd命令"><a href="#xxd命令" class="headerlink" title="xxd命令"></a>xxd命令</h3><p>命令名称 　　xxd - 做一次十六进制的输出或者反操作 xxd命令语法 　　xxd [options] [infile [outfile]] 　　xxd -r[evert] [options] [infile [outfile]] xxd命令描述 　　xxd命令为给定的标准输入或者文件做一次十六进制的输出，它也可以将十六进制输出转换为原来的二进制格式。</p><p> <strong>xxd命令常用选项</strong>　　</p><div class="table-container"><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-b</td><td>用二进制显示一个bit，而不是十六进制</td></tr><tr><td>-r</td><td>以十六进制作为输入，二进制作为输出</td></tr><tr><td>-s [+][-]seek</td><td>从字节开始。+ -分别表示相对于文件的开头和结尾</td></tr><tr><td>-seek offset</td><td>从offset数值开始显示</td></tr></tbody></table></div><hr><h3 id="tar命令"><a href="#tar命令" class="headerlink" title="tar命令"></a>tar命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar –xvf file.tar ..........解压 tar包 </span><br><span class="line">tar -xzvf file.tar.gz ......解压tar.gz </span><br><span class="line">tar -xjvf file.tar.bz2 .....解压 tar.bz2 </span><br><span class="line">tar –xZvf file.tar.Z .......解压tar.Z </span><br><span class="line">unrar e file.rar ...........解压rar </span><br><span class="line">unzip file.zip .............解压zip</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/newcaoguo/p/5896975.html" target="_blank" rel="noopener">tar命令</a></p><hr><h3 id="tmp文件夹"><a href="#tmp文件夹" class="headerlink" title="tmp文件夹"></a>tmp文件夹</h3><p>关于linux下tmp文件夹，正如tmp temporary file 临时文件夹</p><p> <a href="https://shazi.info/" target="_blank" rel="noopener">tmp文件夹</a></p><hr><h3 id="zcat命令"><a href="#zcat命令" class="headerlink" title="zcat命令"></a>zcat命令</h3><p>zcat命令用于不真正解压缩文件，就能显示压缩包中文件的内容的场合 </p><p>-S：指定gzip格式的压缩包的后缀。当后缀不是标准压缩包后缀时使用此选项；</p><p>-c：将文件内容写到标注输出； </p><p>-d：执行解压缩操作；</p><p>-l：显示压缩包中文件的列表； </p><p>-L：显示软件许可信息； </p><p>-q：禁用警告信息； </p><p>-r：在目录上执行递归操作； </p><p>-t：测试压缩文件的完整性；</p><p>-V：显示指令的版本信息；</p><p>-l：更快的压缩速度；</p><p>-9：更高的压缩比</p><hr><h3 id="Linux重定向"><a href="#Linux重定向" class="headerlink" title="Linux重定向"></a>Linux重定向</h3><p><a href="https://blog.csdn.net/qq_35242986/article/details/73772212" target="_blank" rel="noopener">linux重定向</a></p><hr><h3 id="POSIX-tar-archive"><a href="#POSIX-tar-archive" class="headerlink" title="POSIX tar archive"></a>POSIX tar archive</h3><p><a href="https://blog.csdn.net/lindamtd/article/details/78575826" target="_blank" rel="noopener">参考说明</a></p><hr><h3 id="ssh命令"><a href="#ssh命令" class="headerlink" title="ssh命令"></a>ssh命令</h3><p>用 ssh -i keyfile user@host 访问linux主机 <a href="http://www.talkwithtrend.com/Article/30463" target="_blank" rel="noopener">ssh说明1</a> <a href="https://blog.csdn.net/u010705209/article/details/79090670" target="_blank" rel="noopener">ssh说明2</a></p><hr><h3 id="echo命令"><a href="#echo命令" class="headerlink" title="echo命令"></a>echo命令</h3><p>echo命令用于在shell中打印shell变量的值，或者直接输出指定的字符串 </p><p>-n：输出时，不在行尾添加换行符； </p><p>-e：使反斜杠的转义功能生效；</p><p>-E：禁用反斜杠的转义功能，为默认选项； </p><p>—help：显示帮助信息； </p><p>—version：显示版本信息；</p><p> <a href="https://blog.csdn.net/K346K346/article/details/78598376" target="_blank" rel="noopener">echo命令</a></p><hr><h3 id="telnet-命令"><a href="#telnet-命令" class="headerlink" title="telnet 命令"></a>telnet 命令</h3><p>telnet命令用于登录远程主机，对远程主机进行管理。telnet因为采用明文传送报文，安全性不好，很多Linux服务器都不开放telnet服务，而改用更安全的ssh方式了。但仍然有很多别的系统可能采用了telnet方式来提供远程登录，因此弄清楚telnet客户端的使用方式仍是很有必要的 明文传输 telnet(选项)(参数)</p><p> <a href="http://man.linuxde.net/telnet" target="_blank" rel="noopener">telnet说明</a></p><hr><h3 id="openssl命令"><a href="#openssl命令" class="headerlink" title="openssl命令"></a>openssl命令</h3><p>OpenSSL是一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及SSL协议，并提供丰富的应用程序供测试或其它目的使用。在OpenSSL被曝出现严重安全漏洞后，发现多数通过SSL协议加密的网站使用名为OpenSSL的开源软件包。由于这是互联网应用最广泛的安全传输方法，被网银、在线支付、电商网站、门户网站、电子邮件等重要网站广泛使用，所以该漏洞影响范围广大。 OpenSSL有两种运行模式：交互模式和批处理模式。 直接输入openssl回车进入交互模式，输入带命令选项的openssl进入批处理模式。 OpenSSL整个软件包大概可以分成三个主要的功能部分：密码算法库、SSL协议库以及应用程序。OpenSSL的目录结构自然也是围绕这三个功能部分进行规划的 </p><p><a href="http://man.linuxde.net/openssl" target="_blank" rel="noopener">Openssl说明1</a> </p><p><a href="http://www.mamicode.com/info-detail-910765.html" target="_blank" rel="noopener">Openssl说明2</a></p><hr><h3 id="s-client"><a href="#s-client" class="headerlink" title="s_client"></a>s_client</h3><p>其中的s_client模块可以帮助我们作为客户端与ssl服务器进行交互。 </p><p>**openssl s_client -connect localhost:30001 -quiet -quiet</p><p>用以关闭session和证书的信息，同时打开-ign_eof这个选项。前者可简化显示的界面，后者则保证在输入完成后不是立即断开连接，否则无法看到回显的下一个等级的密码。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[&lt;img src=&quot;https://i.loli.net/2018/10/09/5bbc0dfb934dc.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Game" scheme="https://yoloyanng.github.io/tags/Game/"/>
    
  </entry>
  
  <entry>
    <title>搭建Discuz论坛</title>
    <link href="https://yoloyanng.github.io/2018/10/01/%E6%90%AD%E5%BB%BADiscuz%E8%AE%BA%E5%9D%9B/"/>
    <id>https://yoloyanng.github.io/2018/10/01/搭建Discuz论坛/</id>
    <published>2018-10-01T14:22:35.000Z</published>
    <updated>2018-10-09T02:12:13.367Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/10/09/5bbc0e66cfb58.png" alt=""></p><a id="more"></a><blockquote><p>需要准备LAMP环境，（apache，php，mysql）</p></blockquote><h5 id="1、安装apache2"><a href="#1、安装apache2" class="headerlink" title="1、安装apache2"></a><strong>1、安装apache2</strong></h5><p>(如果已经安装好的可以跳过，当然再次执行此命令也不会重复安装的）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apache2 -y</span><br></pre></td></tr></table></figure><h5 id="2、安装-PHP-组件"><a href="#2、安装-PHP-组件" class="headerlink" title="2、安装 PHP 组件"></a><strong>2、安装 PHP 组件</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install php7.0 -y</span><br><span class="line">sudo apt-get install libapache2-mod-php7.0</span><br></pre></td></tr></table></figure><p><strong>3、重启 Apache 服务：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/apache2 restart</span><br></pre></td></tr></table></figure><h5 id="4、安装-MySQL-服务"><a href="#4、安装-MySQL-服务" class="headerlink" title="4、安装 MySQL 服务"></a><strong>4、安装 MySQL 服务</strong></h5><p>这个过程需要你设定密码，要能够记得住的，后面也会用到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mysql-server -y</span><br></pre></td></tr></table></figure><p>安装 php MySQL 相关组件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install php7.0-mysql</span><br></pre></td></tr></table></figure><p>重启 MySQL 服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mysql restart</span><br></pre></td></tr></table></figure><h5 id="5、安装-phpmyadmin"><a href="#5、安装-phpmyadmin" class="headerlink" title="5、安装 phpmyadmin"></a><strong>5、安装 phpmyadmin</strong></h5><p>使用<code>apt-get</code>安装 phpmyadmin，安装过程中，需要根据提示选择 apache2 ，回车就可以了，再根据提示输入数据库密码和服务器登陆密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install phpmyadmin -y</span><br></pre></td></tr></table></figure><h5 id="6、安装并配置-Discuz"><a href="#6、安装并配置-Discuz" class="headerlink" title="6、安装并配置 Discuz"></a><strong>6、安装并配置 Discuz</strong></h5><p>通过wget命令下载一个安装包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo wget &apos;http://download.comsenz.com/DiscuzX/3.3/Discuz_X3.3_SC_UTF8.zip&apos;</span><br></pre></td></tr></table></figure><p>为了将压缩包解压，需要安装一个 unzip</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install unzip</span><br></pre></td></tr></table></figure><p>下载完成后，解压这个压缩包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo unzip Discuz_X3.3_SC_UTF8.zip</span><br></pre></td></tr></table></figure><p>解压完后，就能在<em>upload</em>文件夹里看到discuz的源码了</p><blockquote><p>也可以到 Discuz 官网找一个安装包并复制安装包下载路径，这里我用的是 Discuz_X3.3_SC_UTF8.zip</p></blockquote><h5 id="7、配置-Discuz"><a href="#7、配置-Discuz" class="headerlink" title="7、配置 Discuz"></a><strong>7、配置 Discuz</strong></h5><p>由于 PHP 默认访问<code>/var/www/html/</code>文件夹，所以需要把 upload 文件夹里的文件都复制到<code>/var/www/html/</code>文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv upload/* /var/www/html/</span><br></pre></td></tr></table></figure><p>将目录切换到 php 访问的文件夹下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /var/www/html/</span><br></pre></td></tr></table></figure><p>修改一下<code>config</code>、<code>data</code>、<code>uc_server/data/</code>、<code>uc_client/data/cache</code>目录权限为777</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod -R 777 config/ data/ uc_server/data/ uc_client/data/cache/</span><br></pre></td></tr></table></figure><p>将 apache 指定到 index.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv /var/www/html/index.html /var/www/html/index~.html</span><br></pre></td></tr></table></figure><p>重启 Apache 服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/apache2 restart</span><br></pre></td></tr></table></figure><p><strong>基本结束</strong> <strong>在浏览器中输入你的IP就可以进行后续步骤了</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/10/09/5bbc0e66cfb58.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="环境配置" scheme="https://yoloyanng.github.io/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>wordpress主题下载</title>
    <link href="https://yoloyanng.github.io/2018/10/01/wordpress%E4%B8%BB%E9%A2%98%E4%B8%8B%E8%BD%BD/"/>
    <id>https://yoloyanng.github.io/2018/10/01/wordpress主题下载/</id>
    <published>2018-10-01T14:17:30.000Z</published>
    <updated>2018-10-09T01:38:06.062Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>搭建好wordpress之后发现主题不太合适，下载更新是弹出窗口需要登录FTP 下面就来说说不需要FTP直接就能够下载主题更新的办法</p></blockquote><p><img src="https://i.loli.net/2018/10/09/5bbc066710ca5.jpg" alt=""></p><a id="more"></a><p> <strong>第一步：</strong> 同样的方法将wp-content目录中的plugins（插件）和themes（主题）文件夹权限都设置为777</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 777 plugins</span><br><span class="line"></span><br><span class="line">chmod -R 777 themes</span><br></pre></td></tr></table></figure><p><strong>第二步：</strong> 找到 <code>wp-config.php</code>文件的位置（在这里推荐使用宝塔面板,安装很简单)</p><p> <strong>找到下面这一段代码的位置</strong> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/\*WordPress目录的绝对路径 */</span><br><span class="line"></span><br><span class="line"> if ( !defined(&apos;ABSPATH&apos;) ) define(&apos;ABSPATH&apos;, dirname(\_\_FILE\_\_) . &apos;/&apos;);</span><br></pre></td></tr></table></figure><p><strong>第三步：</strong>在这段代码的后面添加如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">define(&quot;FS_METHOD&quot;, &quot;direct&quot;);</span><br><span class="line">define(&quot;FS_CHMOD_DIR&quot;, 0777);</span><br><span class="line">define(&quot;FS_CHMOD_FILE&quot;, 0777);</span><br></pre></td></tr></table></figure><p>最后保存退出就能够完成了，如果依旧不能够下载，直接将wp-config的权限都设置为777</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;搭建好wordpress之后发现主题不太合适，下载更新是弹出窗口需要登录FTP 下面就来说说不需要FTP直接就能够下载主题更新的办法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/10/09/5bbc066710ca5.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="环境配置" scheme="https://yoloyanng.github.io/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>CTF资源整理</title>
    <link href="https://yoloyanng.github.io/2018/10/01/CTF%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/"/>
    <id>https://yoloyanng.github.io/2018/10/01/CTF资源整理/</id>
    <published>2018-09-30T16:00:00.000Z</published>
    <updated>2018-10-09T02:05:04.545Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>平时收集的一些资源，统一整理；</p><p>一直认为CTF只是一种娱乐，一种了解，学习安全的方式，而不是成为学习的全部，所以以下选择合适的，而不是所有；</p><p>一直认为泛而不精不该是学习应该持有的态度，知道的再多却终究到不出个所以然，和不知道又有多大的区别。专注自己兴趣所在，精力所能达到的方向，努力即可，共勉之。</p></blockquote><hr><p><img src="https://i.loli.net/2018/10/09/5bbc0cba2efbd.jpg" alt=""></p><a id="more"></a><h3 id="CTF练习平台"><a href="#CTF练习平台" class="headerlink" title="CTF练习平台"></a>CTF练习平台</h3><p><a href="http://hackinglab.cn/" target="_blank" rel="noopener">网络信息安全攻防学习平台</a></p><p><a href="http://ctf.bugku.com/" target="_blank" rel="noopener">bugku</a></p><p><a href="https://www.jarvisoj.com" target="_blank" rel="noopener">Jarvis OJ</a></p><p><a href="http://captf.com/" target="_blank" rel="noopener"> ctf题目收集</a></p><p><a href="http://oj.xctf.org.cn/" target="_blank" rel="noopener">XCTF实训平台</a></p><p><a href="http://www.baimaoxueyuan.com" target="_blank" rel="noopener">白帽学院c</a> </p><p><a href="https://www.ichunqiu.com/competition" target="_blank" rel="noopener">i春秋竞赛训练营</a> </p><p><a href="http://www.hetianlab.com/CTFrace.html" target="_blank" rel="noopener">合天网安</a></p><p><a href="http://www.shiyanbar.com/ctf/" target="_blank" rel="noopener">实验吧</a></p><p><a href="https://cgctf.nuptsast.com" target="_blank" rel="noopener">南京邮电大学CTF平台</a></p><p><a href="https://www.linkedbyx.com" target="_blank" rel="noopener">安恒CTF月赛</a></p><h3 id="XSS挑战"><a href="#XSS挑战" class="headerlink" title="XSS挑战"></a>XSS挑战</h3><p><a href="http://xss-quiz.int21h.jp/" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/</a></p><p><a href="https://alf.nu/" target="_blank" rel="noopener">https://alf.nu/</a></p><p><a href="http://prompt.ml/" target="_blank" rel="noopener">http://prompt.ml/</a></p><h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h3><p><a href="http://redtiger.labs.overthewire.org/" target="_blank" rel="noopener">http://redtiger.labs.overthewire.org/</a></p><p><a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a></p><h3 id="CTF-PWN-amp-RE系列"><a href="#CTF-PWN-amp-RE系列" class="headerlink" title="CTF PWN &amp; RE系列"></a>CTF PWN &amp; RE系列</h3><p><a href="http://reversing.kr/" target="_blank" rel="noopener">http://reversing.kr/</a></p><p><a href="http://pwnable.kr/" target="_blank" rel="noopener">http://pwnable.kr/</a></p><p><a href="https://pwnable.tw/" target="_blank" rel="noopener">https://pwnable.tw/</a></p><p><a href="http://liveoverflow.com/" target="_blank" rel="noopener">http://liveoverflow.com/</a></p><h3 id="CTF游戏"><a href="#CTF游戏" class="headerlink" title="CTF游戏"></a>CTF游戏</h3><p><a href="http://monyer.com/game/game1/" target="_blank" rel="noopener">梦之光芒的小游戏</a></p><p><a href="http://hkyx.myhack58.com/" target="_blank" rel="noopener">红客闯关游戏</a></p><p><a href="http://overthewire.org/wargames/" target="_blank" rel="noopener">Over The Wire</a></p><p><a href="https://www.root-me.org/?lang=en" target="_blank" rel="noopener">ROOT ME</a></p><p><a href="http://www.wechall.net/" target="_blank" rel="noopener">We Call</a></p><p><a href="wargame.kr">wargame.kr</a></p><p><a href="http://webhacking.kr/" target="_blank" rel="noopener">Web hacking</a></p><p><a href="https://backdoor.sdslabs.co/" target="_blank" rel="noopener">backdoor</a></p><p><a href="https://ringzer0team.com/" target="_blank" rel="noopener">Ring Zer0</a></p><p><a href="http://fun.coolshell.cn/" target="_blank" rel="noopener">CoolShell puzzle game</a></p><p><a href="http://smashthestack.org/" target="_blank" rel="noopener">smashthestack</a></p><p><a href="https://microcorruption.com/login" target="_blank" rel="noopener">Embedded Security CTF</a></p><p><a href="http://solveme.peng.kr/chall/p/1" target="_blank" rel="noopener">Solve me</a></p><h3 id="靶场"><a href="#靶场" class="headerlink" title="靶场"></a>靶场</h3><p><a href="http://www.dvwa.co.uk/index.php" target="_blank" rel="noopener">DVWA</a></p><p><a href="https://vulhub.org/#/docs/" target="_blank" rel="noopener">Vulhub</a></p><p><a href="https://hack.zkaq.org/?a=battle" target="_blank" rel="noopener">掌控安全在线演练靶场</a></p><p><a href="https://pan.baidu.com/s/1vSX0nF4TODRhwio7wCx3sA" target="_blank" rel="noopener">webug</a></p><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p><a href="http://www.tasfa.cn/index.php/2016/01/29/ctf-tools-2/" target="_blank" rel="noopener">CTF的瑞士军刀</a></p><p><a href="https://www.ctftools.com/down/" target="_blank" rel="noopener">CTFtoos</a></p><p><a href="http://ctf.ssleye.com/" target="_blank" rel="noopener">在线工具</a></p><h3 id="Writeup"><a href="#Writeup" class="headerlink" title="Writeup"></a>Writeup</h3><p><a href="https://github.com/ctfs/" target="_blank" rel="noopener">CTFs</a></p><p><a href="https://ctf-wiki.github.io/ctf-wiki/" target="_blank" rel="noopener">CTF Wiki</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;平时收集的一些资源，统一整理；&lt;/p&gt;
&lt;p&gt;一直认为CTF只是一种娱乐，一种了解，学习安全的方式，而不是成为学习的全部，所以以下选择合适的，而不是所有；&lt;/p&gt;
&lt;p&gt;一直认为泛而不精不该是学习应该持有的态度，知道的再多却终究到不出个所以然，和不知道又有多大的区别。专注自己兴趣所在，精力所能达到的方向，努力即可，共勉之。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/10/09/5bbc0cba2efbd.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://yoloyanng.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>课堂上的《图片隐写学习》</title>
    <link href="https://yoloyanng.github.io/2018/09/29/%E8%AF%BE%E5%A0%82%E4%B8%8A%E7%9A%84%E3%80%8A%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99%E5%AD%A6%E4%B9%A0%E3%80%8B/"/>
    <id>https://yoloyanng.github.io/2018/09/29/课堂上的《图片隐写学习》/</id>
    <published>2018-09-28T16:00:00.000Z</published>
    <updated>2018-10-09T02:16:17.917Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/10/09/5bbc0f29d82c5.jpg" alt=""></p><a id="more"></a><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>第一次老师在课堂上讲授关于图片隐写的内容，觉得题目有些意思，就记录一下</p></blockquote><p>首先已经很明确的告诉了题目的相关信息</p><blockquote><p>文件格式：BMP</p><p>工具：Winhex</p><p>类型：图片隐写</p></blockquote><h3 id="开始操作"><a href="#开始操作" class="headerlink" title="开始操作"></a>开始操作</h3><p>文件直接无法打开，到winhex中看一看</p><p><img src="https://i.loli.net/2018/09/29/5baf7f39443af.png" alt=""></p><p>很显然这不是bmp文件头，所以这道题目就是加个头部就可以了，最后的答案是这样的，那么找一个bmp的文件头加上去嘛</p><p><img src="https://i.loli.net/2018/09/29/5baf80ad05780.png" alt=""></p><p>加完之后，依旧是打不开的啊？？？难道是覆盖原来的地方么，那再试试吧！</p><p><img src="https://i.loli.net/2018/09/29/5baf811e9cea7.png" alt=""></p><p>还是打不开，看来是我想的太简单了。。。然后找资料详细了解一下bmp文件头</p><h3 id="BMP文件分析"><a href="#BMP文件分析" class="headerlink" title="BMP文件分析"></a>BMP文件分析</h3><blockquote><p>BMP（全称Bitmap）是Windows操作系统中的标准图像文件格式，可以分成两类：设备相关位图（DDB）和设备无关位图（DIB），使用非常广。它采用位映射存储格式，除了图像深度可选以外，不采用其他任何压缩，因此，BMP文件所占用的空间很大。</p><p>BMP文件的图像深度可选1bit、4bit、8bit、16bit、24bit、32bit。BMP文件存储数据时，图像的扫描方式是按从左到右、从下到上的顺序。由于BMP文件格式是Windows环境中交换与图有关的数据的一种标准，因此在Windows环境中运行的图形图像软件都支持BMP图像格式。</p></blockquote><div class="table-container"><table><thead><tr><th>数据段名称</th><th>大小（byte）</th></tr></thead><tbody><tr><td>bmp文件头</td><td>14</td></tr><tr><td>位图信息头</td><td>40</td></tr><tr><td>调色板</td><td>由颜色索引数决定</td></tr><tr><td>位图数据</td><td>由图像尺寸决定</td></tr></tbody></table></div><p>图像通常保存的颜色深度有：<a href="https://en.wikipedia.org/wiki/BMP_file_format" target="_blank" rel="noopener">wikipedia</a></p><ul><li>每像素1位：支持2种不同的颜色（例如：黑色和白色）像素值存储在每个位中，也即调色板有两个；</li><li>每像素2位：支持4种不同的颜色，每1字节存储4个像；</li><li>每像素4位：支持16种不同的颜色，每1字节存储2个像素；</li><li>每像素8位：支持256种不同的颜色，每1字节存储1个像素；</li><li>每像素16位：支持65536种不同的颜色，每2字节WORD存储1个像素；</li><li>每像素24位：支持16,777,216种不同颜色（真彩色），每3字节存储1个像素值，没有调色板；</li><li>每像素32位：支持4,294,967,296种不同颜色，每4字节DWORD存储1个像素，没有调色板；</li></ul><p><strong>BMP文件头</strong></p><div class="table-container"><table><thead><tr><th>字节（byte）</th><th>内容  (HEX)</th></tr></thead><tbody><tr><td>0-1（2byte）</td><td>4D 42（固定） 表示文件类型</td></tr><tr><td>2-5（4byte）</td><td>表示文件的大小</td></tr><tr><td>6-7（2byte)</td><td>00 00（固定）保留位</td></tr><tr><td>8-9（2byte)</td><td>00 00（固定）保留位</td></tr><tr><td>a-d（4byte）</td><td>4字节的偏移，表示从文件头到位图数据的偏移</td></tr></tbody></table></div><p><strong>位图信息头</strong></p><div class="table-container"><table><thead><tr><th>字节</th><th>内容（HEX）</th></tr></thead><tbody><tr><td>4byte</td><td>28 00 00 00（固定）信息头的大小</td></tr><tr><td>4byte</td><td>宽度（以像素为单位）</td></tr><tr><td>4byte</td><td>高度（以像素为单位）                                                                                                                                          同时如果为正，说明位图倒立（即数据表示从图像的左下角到右上角），如果为负说明正向；</td></tr><tr><td>2byte</td><td>为目标设备说明颜色平面数，总被设置为1</td></tr><tr><td>2byte</td><td>位数/像素数，十进制值有1、2、4、8、16、24、32</td></tr><tr><td>4byte</td><td>说明位图数据的压类型（ 00 00 00 00 表示不压缩）</td></tr><tr><td>4byte</td><td>说明位图数据的大小，即图像大小=文件大小-偏移量</td></tr><tr><td>4byte</td><td>水平分辨率</td></tr><tr><td>4byte</td><td>垂直分辨率</td></tr><tr><td>4byte</td><td>颜色索引数</td></tr></tbody></table></div><p><strong>调色板</strong></p><blockquote><p>不都有</p></blockquote><p><strong>位图数据</strong></p><hr><h3 id="再次开始解题"><a href="#再次开始解题" class="headerlink" title="再次开始解题"></a>再次开始解题</h3><p>分析之后发现，不是所有的bmp文件头数据都是一样的，所以需要知道文件的大小，宽高才能够匹配正确的文件头</p><p><img src="https://i.loli.net/2018/09/29/5baf933ecdf79.png" alt=""></p><ul><li>在这里可以看到文件大小为 230454 byte;</li><li>图像大小为 230454-54=230400 byte;</li><li>那么宽高是是多少呢？<ul><li>这里得看位图是多少，现在常见的就是24位，每三个字节存储一个像素</li><li>还有就是文件尾部看到的 00 00 00也可以得知是24位的</li><li>图像大小=宽 x 高 x 3</li></ul></li><li>得知是 320 x 240 x 3</li></ul><p>覆盖到文件头得到下面图片：</p><p><img src="https://i.loli.net/2018/09/29/5baf9f18a92c4.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/10/09/5bbc0f29d82c5.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://yoloyanng.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>利用wordpress搭建博客</title>
    <link href="https://yoloyanng.github.io/2018/09/29/%E5%88%A9%E7%94%A8wordpress%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://yoloyanng.github.io/2018/09/29/利用wordpress搭建博客/</id>
    <published>2018-09-28T16:00:00.000Z</published>
    <updated>2018-10-09T02:18:34.796Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/10/09/5bbc0fe1f0d42.jpg" alt=""></p><a id="more"></a><h5 id="1、准备LAMP环境"><a href="#1、准备LAMP环境" class="headerlink" title="1、准备LAMP环境"></a>1、准备LAMP环境</h5><p>安装Apache2 在终端输入如下命令来安装apache2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apache2 -y</span><br></pre></td></tr></table></figure><h5 id="2-、安装PHP组件"><a href="#2-、安装PHP组件" class="headerlink" title="2 、安装PHP组件"></a>2 、安装PHP组件</h5><p>分别输入下述两条命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install php7.0 -y</span><br><span class="line">sudo apt-get install libapache2-mod-php7.0</span><br></pre></td></tr></table></figure><h5 id="3、安装MySQL服务"><a href="#3、安装MySQL服务" class="headerlink" title="3、安装MySQL服务"></a>3、安装MySQL服务</h5><p>这个过程中会提示设置MySQL的密码，需要连续输入两次，密码需要记住 输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mysql-server -y</span><br></pre></td></tr></table></figure><p>安装php MySQL相关组件 输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install php7.0-mysql</span><br></pre></td></tr></table></figure><p>安装phpmyadmin 在这一过程会提示选择Apache2,按回车就行，然后依次输入你的服务器登录的密码和刚才设置的MySQL数据库的密码 依次输入下面两条命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install phpmyadmin -y</span><br><span class="line">sudo ln -s /usr/share/phpmyadmin/var/www/html/phpmyadmin</span><br></pre></td></tr></table></figure><p>重启MySQL服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mysql restart</span><br></pre></td></tr></table></figure><p>重启Apache服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart apache2.service</span><br></pre></td></tr></table></figure><h5 id="4、安装并且配置wordpress"><a href="#4、安装并且配置wordpress" class="headerlink" title="4、安装并且配置wordpress"></a>4、安装并且配置wordpress</h5><p>4.1、安装Wordpress压缩包，可以到<a href="https://cn.wordpress.org" target="_blank" rel="noopener">官网</a>复制最新的压缩包的下载连接，记得下载的是zip格式的文件，利用wget命令来下载，这里给出的是目前最新的版本（时间是2018.6.25） 输入如下命令：（默认下载到当前目录，可以通过 ls 命令查看）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo wget https://cn.wordpress.org/wordpress-4.9.4-zh_CN.zip</span><br></pre></td></tr></table></figure><p>输入命令：（接下后再次通过 ls 查看发现会多了Wordpress的文件）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo unzip wordpress-4.9.4-zh_CN.zip</span><br></pre></td></tr></table></figure><p>解压不了可能是unzip没有下载，通过apt-get 命令下载unzip后在解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install unzip</span><br></pre></td></tr></table></figure><p>为wordpress配置一个数据库（在这一部分的内容要记住，因为后面进入Wordpress的时候需要） 输入下列代码，然后输入你的MySQL密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p>为wordpress创建一个名为wordpress的数据库（等会登陆的时候需要你输入数据库的名字）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE wordpress;</span><br></pre></td></tr></table></figure><p>为这个数据库设置一个用户名为wordpress_user</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER wordpress_user;</span><br></pre></td></tr></table></figure><p>为这个用户设置一个用户密码为password(可以自己更改能记住的密码，然后后面的也都要改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET PASSWORD FOR wordpress_user= PASSWORD(&quot;password123&quot;);</span><br></pre></td></tr></table></figure><p>为这个用户配置数据库的访问权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON wordpress.* TO wordpress_user IDENTIFIED BY&quot;password123&quot;;</span><br></pre></td></tr></table></figure><p>生效这些配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><p>然后退出MySQL</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit;</span><br></pre></td></tr></table></figure><p>配置Wordpress 依次地输入下面的代码： 因为php默认访问<code>/var/www/html/</code> 把刚刚安装的wordpress复制到<code>/var/www/html/``下面</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv wordpress/* /var/www/html/</span><br></pre></td></tr></table></figure><p>然后可以删除输入下面的命令删除原本的wordpress(强迫症的原因)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf wordpress</span><br></pre></td></tr></table></figure><p>设置权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod -R 777 /var/www/html/</span><br></pre></td></tr></table></figure><p>将 apache 指定到 index.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv /var/www/html/index.html /var/www/html/index~.html</span><br></pre></td></tr></table></figure><p>重启apache2服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart apache2.service</span><br></pre></td></tr></table></figure><blockquote><p>到这里基本结束，然后在浏览器中输入你的域名 激活安装wordpress就行，数据库的信息就是刚刚设置的信息</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/10/09/5bbc0fe1f0d42.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="环境配置" scheme="https://yoloyanng.github.io/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>几道图片隐写题三</title>
    <link href="https://yoloyanng.github.io/2018/09/28/%E5%87%A0%E9%81%93%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99%E9%A2%98%E4%B8%89/"/>
    <id>https://yoloyanng.github.io/2018/09/28/几道图片隐写题三/</id>
    <published>2018-09-27T16:00:00.000Z</published>
    <updated>2018-10-09T02:24:28.204Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/10/09/5bbc11323ea9e.jpg" alt=""></p><a id="more"></a><blockquote><p>Python代码参考：<a href="https://mp.weixin.qq.com/s/kxpmNpk8xAA3mbMtzyWaiw" target="_blank" rel="noopener">合天智汇-几道图片隐写题</a></p><p>题目来源：Bugku—图穷匕见</p><p><a href="https://share.weiyun.com/50UMgkn" target="_blank" rel="noopener">文件下载</a></p></blockquote><p>下载得到一张图片，一贯的套路，拖到010Editor里面看看先</p><p><img src="https://i.loli.net/2018/09/28/5bae44c308c09.png" alt=""></p><p>真正有东西的是后面的这部分数字和字母：</p><p><img src="https://i.loli.net/2018/09/28/5bae45917728a.png" alt=""></p><blockquote><p>科普一下</p></blockquote><p><img src="https://i.loli.net/2018/09/28/5bae4610acdb4.png" alt=""></p><blockquote><p>Exif : <strong>可交换图像文件格式</strong>（英语：Exchangeable image file format，官方简称<strong>Exif</strong>），是专门为数码相机的照片设定的，可以记录数码照片的属性信息和拍摄数据</p><p>Exif可以附加于JPEG、TIFF、RIFF 等文件之中，为其增加有关数码相机拍摄信息的内容和索引图或图像处理软件的版本信息。</p></blockquote><p>还是binwalk分析一下看看：</p><p><img src="https://i.loli.net/2018/09/28/5bae472653d3f.png" alt=""></p><p>没什么特别，看来flag就在这一串的数字字母结合的数据里头了，很明显看起来这是16进制的编码，转换一下得到下面的文本：</p><blockquote><p>ps：Converter，一个转换工具，功能很齐全</p></blockquote><p><img src="https://i.loli.net/2018/09/28/5bae48752930e.png" alt=""></p><p>得到的是一堆的坐标，能够干嘛呢，后来知道通过坐标画图</p><blockquote><p>方法一：使用KALI 的 gnuplot </p></blockquote><p>百度略微了解了一下gnuplot的用法，把坐标转换成为 gnuplot 能够识别的形式</p><p>用notepad++ 的替换即可完成，保存为1.txt文件，然后在Kali中进入gnuplot</p><p>执行 plot “1.txt”,得到如下图片：</p><p><img src="https://i.loli.net/2018/09/28/5bae4c9870fad.png" alt=""></p><p>扫码即可得到falg:</p><blockquote><p>flag{40fc0a979f759c8892f4dc045e28b820}</p><p>方法二：利用Python编写脚本</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">n=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">canvas= np.ones((<span class="number">300</span>, <span class="number">300</span>, <span class="number">3</span>), dtype=<span class="string">"uint8"</span>)</span><br><span class="line"></span><br><span class="line">canvas=canvas*<span class="number">255</span></span><br><span class="line"></span><br><span class="line">list=open(<span class="string">"1.txt"</span>).read().split(<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line">list=[i.split(<span class="string">","</span>)<span class="keyword">for</span> i <span class="keyword">in</span> list]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> list:</span><br><span class="line"></span><br><span class="line">canvas[int(p[<span class="number">0</span>]),int(p[<span class="number">1</span>])]=[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">cv2.imwrite(<span class="string">"2.jpg"</span>,canvas)</span><br><span class="line"></span><br><span class="line">cv2.imshow(<span class="string">"Canvas"</span>,canvas)</span><br><span class="line"></span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/09/29/5bae518f03e02.png" alt=""></p><p>扫码得到flag:</p><blockquote><p>flag{40fc0a979f759c8892f4dc045e28b820}</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/10/09/5bbc11323ea9e.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://yoloyanng.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>几道图片隐写题二</title>
    <link href="https://yoloyanng.github.io/2018/09/27/%E5%87%A0%E9%81%93%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99%E9%A2%98%E4%BA%8C/"/>
    <id>https://yoloyanng.github.io/2018/09/27/几道图片隐写题二/</id>
    <published>2018-09-26T16:00:00.000Z</published>
    <updated>2018-10-09T02:17:23.239Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/10/09/5bbc0f902872e.jpg" alt=""></p><a id="more"></a><blockquote><p>网鼎杯第一场MISC—-clip</p><p><a href="https://share.weiyun.com/54SMoop" target="_blank" rel="noopener">题目下载链接</a></p></blockquote><p>下载题目压缩包解压后得到两个文件 desc.txt  和  damaged.disk</p><p>desc.txt理面是一段英文，翻译后就是：</p><blockquote><p>Horse Clip-Clop<br>A strange filesystem is recovered from a damaged old hard disk.</p><p>马夹子<br>从损坏的旧硬盘恢复奇怪的文件系统。</p></blockquote><p>然后百度、Google还是看不懂，就不对这个txt文件分析了</p><hr><ul><li>把 damaged.disk拖到010Editor中看看有什么信息</li></ul><p><img src="https://i.loli.net/2018/09/27/5bac97e575fa8.png" alt=""></p><p>文件开头，看不懂。。。。。。</p><p>往下继续翻，CTRL+F 搜索一下 flag，key，ctf 无果（太天真了）</p><p>后面发现了PNG的文件头，终于找到关键信息</p><p><img src="https://i.loli.net/2018/09/27/5bac98f96ed4c.png" alt=""></p><p>往下找发现有两个IHDR，CTRL +F 发现确实就是两个然后裁剪出来补上文件头得到两张图片</p><p><img src="https://i.loli.net/2018/09/27/5bac9af42b0b3.png" alt=""></p><p><img src="https://i.loli.net/2018/09/27/5bac9b07db662.png" alt=""></p><p>然后用PS将两张图片进行拼接，就得到flag了</p><p><img src="https://i.loli.net/2018/09/28/5badb2677bd56.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/10/09/5bbc0f902872e.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://yoloyanng.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Linux--文件解析</title>
    <link href="https://yoloyanng.github.io/2018/09/27/Linux-%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90/"/>
    <id>https://yoloyanng.github.io/2018/09/27/Linux-文件解析/</id>
    <published>2018-09-26T16:00:00.000Z</published>
    <updated>2018-10-09T02:08:55.166Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/10/09/5bbc0da62a51e.png" alt=""></p><a id="more"></a><blockquote><p>查看文件权限:：ls -l 或者ll</p></blockquote><p><img src="https://i.loli.net/2018/09/14/5b9b535ab4122.jpg" alt="1"></p><p><code>drwxr-xr-x 3 root   root   4096 Sep 10 10:51 xxx</code></p><p><code>drwxr-xr-x 7 ubuntu ubuntu 4096 Sep 10 10:52 xxx</code></p><blockquote><p>注释: 上述“ls -l”的结果一共有 9 列,分为 7 个部分.下面从左向右对这 7 部分信息进行解释</p><p>drwxr-xr-x<br>文件权限信息，有十个字符</p></blockquote><ul><li><strong>第一个字符表示文件类型</strong></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">字符</th><th style="text-align:center">文件类型</th></tr></thead><tbody><tr><td style="text-align:center">-</td><td style="text-align:center">普通文件</td></tr><tr><td style="text-align:center">l</td><td style="text-align:center">link链接文件，指向另一个文件，类似快捷方式</td></tr><tr><td style="text-align:center">d</td><td style="text-align:center">direct 目录文件</td></tr><tr><td style="text-align:center">b</td><td style="text-align:center">block块文件 硬盘 二进制文件</td></tr><tr><td style="text-align:center">c</td><td style="text-align:center">字符设备文件</td></tr><tr><td style="text-align:center">s</td><td style="text-align:center">socket套接字文件</td></tr><tr><td style="text-align:center">p</td><td style="text-align:center">命名管道文件</td></tr></tbody></table></div><p><strong>其余字符每3个一组</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">r=4</span><br><span class="line">w=2</span><br><span class="line">x=1</span><br><span class="line">通过4、2、1的组合，得到以下几种权限：</span><br><span class="line">    0（没有权限）</span><br><span class="line">    4（读取权限）</span><br><span class="line">    5（4+1 | 读取+执行）</span><br><span class="line">    6（4+2 | 读取+写入）</span><br><span class="line">    7（4+2+1 | 读取+写入+执行</span><br><span class="line">常见Linux文件权限</span><br><span class="line">    444 -r--r--r--</span><br><span class="line">    600 -rw-------</span><br><span class="line">    644 -rw-r--r--</span><br><span class="line">    666 -rw-rw-rw-</span><br><span class="line">    700 -rwx------</span><br><span class="line">    744 -rwxr--r--</span><br><span class="line">    755 -rwxr-xr-x</span><br><span class="line">    777 -rwxrwxrwx</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:left">第一组(文件所有者的权限)</th><th style="text-align:left">rwx</th><th>文件所有者的权限是读（r）写（w）执行（x）</th></tr></thead><tbody><tr><td style="text-align:left">第二组（同组用户的权限</td><td style="text-align:left">r-x</td><td>同组用户的权限是读和执行</td></tr><tr><td style="text-align:left">第三组（其他用户的权限</td><td style="text-align:left">r-x</td><td>其他用户的权限是读和执行</td></tr></tbody></table></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">3 ·······················表示连接的文件数</span><br><span class="line">root ····················表示用户</span><br><span class="line">root ····················表示用户所在的组</span><br><span class="line">4096 ····················表示文件的字节数</span><br><span class="line">Sep 10 10:51 ············表示文件的最后修改日期</span><br><span class="line">xxx ·····················文件/目录名</span><br></pre></td></tr></table></figure><p><strong>ugoa</strong></p><div class="table-container"><table><thead><tr><th>简称</th><th>含义</th></tr></thead><tbody><tr><td>u</td><td>user(文件的所有者)</td></tr><tr><td>g</td><td>group(与文件相关联的组)</td></tr><tr><td>o</td><td>other(所有其他用户)</td></tr><tr><td>a</td><td>all(ugo的所有用户)</td></tr></tbody></table></div><p><strong>操作运算符:</strong></p><div class="table-container"><table><thead><tr><th style="text-align:center">operator</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">+</td><td style="text-align:center">为指定的用户类型添加权限</td></tr><tr><td style="text-align:center">-</td><td style="text-align:center">为指定的用户类型删除权限</td></tr><tr><td style="text-align:center">=</td><td style="text-align:center">设定或重置指定用户类型的权限</td></tr></tbody></table></div><p><strong>改变权限</strong></p><div class="table-container"><table><thead><tr><th>chown</th><th>改变文件的拥有者</th></tr></thead><tbody><tr><td>chgrp</td><td>改变文件所属的组</td></tr><tr><td>chmod</td><td>改变文件的权限</td></tr></tbody></table></div><p><strong>chmod 改变文件或目录的权限</strong></p><div class="table-container"><table><thead><tr><th style="text-align:left">chmod 755 abc</th><th style="text-align:left">赋予abc权限rwxr-xr-x</th></tr></thead><tbody><tr><td style="text-align:left">chmod u=rwx，g=rx，o=rx abc</td><td style="text-align:left">同上u=用户权限，g=组权限，o=不同组其他用户权限</td></tr><tr><td style="text-align:left">chmod u-x，g+w abc</td><td style="text-align:left">给abc去除用户执行的权限，增加组写的权限</td></tr><tr><td style="text-align:left">chmod a+r abc</td><td style="text-align:left">给所有用户添加读的权限</td></tr></tbody></table></div><p><strong>改变所有者（chown）和用户组（chgrp）命令</strong></p><div class="table-container"><table><thead><tr><th>chown xiaoming abc</th><th>改变abc的所有者为xiaoming</th></tr></thead><tbody><tr><td>chgrp root abc</td><td>改变abc所属的组为root</td></tr><tr><td>chown root ./abc</td><td>改变abc这个目录的所有者是root</td></tr><tr><td>chown ‐R root ./abc</td><td>改变abc这个目录及其下面所有的文件和目录的所有者是root</td></tr></tbody></table></div><p><code>- usermod ‐g 组名 用户名  ·······改变某个用户所在的组</code></p><p><code>usermod ‐d 目录名 用户名 ······改变该用户登录的初始目录</code></p><p><strong>三种特殊权限的管理:SUID、SGID、SBIT</strong></p><p><strong>SUID(Set UID)</strong></p><blockquote><p>当 s 这个标志出现在文件拥有者 x 权限上时,此时就被称为 Set UID,简称为 SUID 的特殊权限。 那么 SUID 的权限对于一个文件有这样的限制和功能:</p></blockquote><p>(1)SUID 权限仅对二进制程序(binary program)有效;</p><p>(2)执行者对于该程序需要具有 x 的可执行权限;</p><p>(3)本权限仅在执行该程序在的过程中有效 (run-time);</p><p>(4)执行者将具有该程序拥有者 (owner) 的权限。</p><blockquote><p>注意:</p><p>非常关键的是,SUID 所针对的只能是二进制文件,而不是可执行文件,例如 shell脚本就不可以被赋予 SUID 的权限。</p></blockquote><p><strong>SGID</strong></p><blockquote><p>SGID 可以针对文件或者目录进行设定。</p></blockquote><p>(1) 如果 SGID 针对的是文件的话有以下限定:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、SGID 对二进制程序有用;</span><br><span class="line"></span><br><span class="line">2、程序执行者对于该程序来说,需具备 x 的权限;执行者在执行的过程中将会获得该程序群组的支持</span><br></pre></td></tr></table></figure><p>(2)如果 SGID 使用在目录上,它将具有以下的功能:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、用户对于此目录具有 r 和 x 的权限时,该用户能够进入此目录;</span><br><span class="line"></span><br><span class="line">2、用户在此目弽下癿有效群组(effective group)将会变成该目弽癿群组;</span><br><span class="line"></span><br><span class="line">3、若用户在此目录下具有 w 的权限(可以新建文件),则使用者所建立的新文件的;</span><br><span class="line"></span><br><span class="line">4、所属组与此目录的组群相同</span><br></pre></td></tr></table></figure><p><strong>Sticky Bit</strong></p><blockquote><p>这个权限只针对目录有效,对于文件是没有效果的,简称为 SBIT。SBIT 对于目录的作用是:</p></blockquote><p>(1) 当用户对于此目录具有 r 与 x 的权限时,该用户能够进入此目录。</p><p>(2) 当用户在该目录下建立文件时,只有自己和 root 能够进行删除,其他用户不能够进行删除。</p><p><strong>SUID、SGID 和 SBIT 权限的设定:</strong></p><p>(1) 使用符号进行设定:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SUID ====&amp;gt;chmod u+s 二进制文件</span><br><span class="line"></span><br><span class="line">SGID ====&amp;gt;chmod g+s 目录或者二进制文件</span><br><span class="line"></span><br><span class="line">SBIT ====&amp;gt;chmod  o+t 目录</span><br></pre></td></tr></table></figure><p>(2) 使用数字进行设定:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4 为 SUID</span><br><span class="line"></span><br><span class="line">2 为 SGID</span><br><span class="line"></span><br><span class="line">1 为 SBIT</span><br></pre></td></tr></table></figure><blockquote><p>可以使用 chmod 进行赋值,以前我们文件权限的修改是三位数字(例如:777),如果要添加上 SUID 的权限,则为四位数字:4777,添加 SGID 和 SBIT 的方法类似。</p></blockquote><p><strong>设置文件与目录的默认权限</strong></p><blockquote><p>在 linux 操作系统中文件的预设权限由 umask 值决定,文件和目录的默认权限是有所区别的:</p></blockquote><p>(1).文件的 x 权限默认情况下是被取消的,也就是说文件默认的满权限是 666。主要考虑以下两个原因:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1)一般情况下文件只起记录的作用,所以能够进行读写即可。</span><br><span class="line"></span><br><span class="line">2)取消 x 权限也是出于安全的考虑。毕竟直创建的文件就可以执行脚本是非常危险的隐患。</span><br></pre></td></tr></table></figure><p>(2).目录的满权限是包含 x 的,也就是 777。</p><p>(3).文件和目录的初始权限就是由其满权限减去 umask 值决定的。在文件/etc/profile 文件中我们对 umask 值进行了设置:</p><p>只有当用户的 id 大于 199,并且用户名称和其组名称相等的时候,它的 umask 值为002,使用 666 和 777 分别减去 002 会得到结果</p><p><strong>软链接与硬链接</strong></p><p><strong>hard Link(硬链接,或者称作实体链接)</strong></p><p>在了解硬链接之前我们需要清楚以下几个知识:</p><p>1) 每个文件都会占用一个 inode ,文件内容由 inode 的记录来指向;</p><p>2) 想要读取该文件的内容,必须通过目录所记录的文件名来找到正确的 inode 号进行读取。</p><p>接下来我们举例建立一个文件的硬链接:</p><p>​    我们设置了/mnt/crontab 为/etc/crontab 的硬链接文件,通过列出详细信息可以发现二者的inode 号是相同的,而且链接数目变为了 2。通过 1 和 2 的目录的 inode 号找到指定的块(block),在这两个块中有不同的文档名,但是这两个文档名都可以指定 real 这个 inode 号去找到最终读取的数据。<br>​    使用硬链接时,磁盘空间和 inode 数量都不会发生变化。硬链接只是在所指定的目录的block 多写入一个关联数据,既不会增加 inode 数也不会耗用 block 数。</p><p></p><p><strong>硬链接的使用有以下限制:</strong></p><p>1) 不能跨越文件系统;</p><p>2) 不能对目录进行硬链接;</p><blockquote><p>解释:</p></blockquote><p>​    跨越文件系统会造成链接上的错乱,而如果使用 hard link 链接到目录时, 链接的数据需要连同被链接目录底下的所有数据都要建立链接,举例来说,如果你要将/etc 使用硬链接建立一个 /etc_hd 的目录时,那在 /etc_hd 底下的所有文件同时都与/etc 底下的文件要建立 hard link ,而不仅是两个目录名之间建立硬链接而已。</p><p>eg：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-rw-r--r--. 1 root root 451 Dec 28  2013 /etc/crontab</span><br><span class="line"></span><br><span class="line">[root@localhost mnt]# ln /etc/crontab ./crontab</span><br><span class="line"></span><br><span class="line">[root@localhost mnt]# ll -i /etc/crontab</span><br><span class="line"></span><br><span class="line">135288839 -rw-r--r--. 2 root root 451 Dec 28  2013 /etc/crontab</span><br><span class="line"></span><br><span class="line">[root@localhost mnt]# ll -i ./crontab</span><br><span class="line"></span><br><span class="line">135288839 -rw-r--r--. 2 root root 451 Dec 28  2013 ./crontab</span><br><span class="line"></span><br><span class="line">[root@localhost mnt]#</span><br></pre></td></tr></table></figure><p><strong>soft Link(软链接,又称作符号链接)</strong></p><p>​    通过软链接建立的文件是一个独立的文件,它相当于是一个“指针”。这个文件会让数据的读取指向它 link 的文件。因为只是一种指向动作,如果软链接的源文件被修改,它进行读取也会发生改变,如果源文件被删除,则链接文件无法进行读取了。</p><p>eg：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost c]# ln -s fork.c ./fork.c.bak</span><br><span class="line"></span><br><span class="line">[root@localhost c]# ll -i fork.c</span><br><span class="line"></span><br><span class="line">3190163 -rw-r--r--. 1 root root 393 Dec 10 14:55 fork.c</span><br><span class="line"></span><br><span class="line">[root@localhost c]# ll -i fork.c.bak</span><br><span class="line"></span><br><span class="line">137866169 lrwxrwxrwx. 1 root root 6 Jan  8 16:00 fork.c.bak -&amp;gt; fork.c</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/qi_700/article/details/54234787" target="_blank" rel="noopener">参考文章</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/10/09/5bbc0da62a51e.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://yoloyanng.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>几道图片隐写题一</title>
    <link href="https://yoloyanng.github.io/2018/09/27/%E5%87%A0%E9%81%93%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99%E9%A2%98%E4%B8%80/"/>
    <id>https://yoloyanng.github.io/2018/09/27/几道图片隐写题一/</id>
    <published>2018-09-26T16:00:00.000Z</published>
    <updated>2018-10-09T02:15:43.052Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>代码参考：合天智汇 <a href="https://mp.weixin.qq.com/s/kxpmNpk8xAA3mbMtzyWaiw" target="_blank" rel="noopener">几道隐写题目的总结</a></p><p>网鼎杯 第一场MISC</p><p><a href="https://share.weiyun.com/5B1ykSO" target="_blank" rel="noopener">题目下载链接</a></p></blockquote><ul><li>打开压缩包得到的是一张PNG格式的图片</li></ul><p><img src="https://i.loli.net/2018/09/27/5bac57670a4c5.png" alt="1538017412117"></p><a id="more"></a><ul><li>首先拖放到010Editor中：</li></ul><p><img src="https://i.loli.net/2018/09/27/5bac5767a95c3.png" alt="1538017580794"></p><p>CTRL+F 搜索IHDR发现只有一个，没有其他问题</p><ul><li>然后放到KALI中分析一波：</li></ul><p><img src="https://i.loli.net/2018/09/27/5bac5768bd784.png" alt=""></p><p>图片能够在kali中打开，说明不是宽高的隐写，因为如果修改了宽高在linux中是无法正常显示的</p><ul><li>然后binwalk分析一波：</li></ul><p><img src="https://i.loli.net/2018/09/27/5bac57681f66f.png" alt=""></p><p>同样的没有什么问题</p><ul><li>最后就是放到 stegslove里面试一试了</li></ul><blockquote><p>科普一下png的知识</p></blockquote><p>png支持RGBA四个通道，每个通道占8个二进制位，隐写文件或数据一般都在各个通道的低位，因为低位的变化不会引起较大的视觉变化，图片还是原来的图片，但是你不知道是在哪个通道，这里有4个通道，如果藏在一个通道的低位的话，有四种可能，如果藏在两个通道的低位的话，可能进行各种运算操作后出现新的图片，加减乘除与或异或</p><p><img src="https://i.loli.net/2018/09/27/5bac576932ee5.png" alt=""></p><p>发现Red plane 0是空的，按理来说应该也是”雪花“的，所以应该是有问题的</p><p>然后 Analyse - Data Extract，查看该通道，得知是LSB隐写</p><p><img src="https://i.loli.net/2018/09/27/5bac5769ef894.png" alt=""></p><p>后面得知就是吧Alpha、Red、Green、Blue 0通道进行异或处理就能够得到flag了，可以通过stegslove获得，下面说一下通过python编写脚本进行色道分离异或处理的方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lowbit</span><span class="params">(x)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> x &amp; <span class="number">0x1</span></span><br><span class="line"></span><br><span class="line">png= cv2.imread(<span class="string">"flag_enc.png"</span> , cv2.IMREAD_UNCHANGED)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个temp文件夹保存异或之后的图片</span></span><br><span class="line">os.system(<span class="string">"mkdir temp"</span>)</span><br><span class="line"><span class="comment"># 打开进入temp文件夹</span></span><br><span class="line">os.system(<span class="string">"cd temp"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">4</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">4</span>):</span><br><span class="line"></span><br><span class="line">        dst= cv2.bitwise_xor(lowbit(png[: ,: ,i]),lowbit(png[: ,:, f]))</span><br><span class="line"></span><br><span class="line">        cv2.imwrite(<span class="string">"temp/"</span>+<span class="string">"xor_"</span>+str(i)+<span class="string">"_"</span>+str(f)+<span class="string">".png"</span>,dst*<span class="number">255</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">4</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">4</span>):</span><br><span class="line"></span><br><span class="line">        dst= cv2.bitwise_or(lowbit(png[: ,: ,i]),lowbit(png[: ,:, f]))</span><br><span class="line"></span><br><span class="line">        cv2.imwrite(<span class="string">"temp/"</span>+<span class="string">"or_"</span>+str(i)+<span class="string">"_"</span>+str(f)+<span class="string">".png"</span>,dst*<span class="number">255</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">4</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">4</span>):</span><br><span class="line"></span><br><span class="line">        dst= cv2.bitwise_and(lowbit(png[: ,: ,i]),lowbit(png[: ,:, f]))</span><br><span class="line"></span><br><span class="line">        cv2.imwrite(<span class="string">"temp/"</span>+<span class="string">"and_"</span>+str(i)+<span class="string">"_"</span>+str(f)+<span class="string">".png"</span>,dst*<span class="number">255</span>)</span><br></pre></td></tr></table></figure><p>然后就可以得到结果，很明显能够看到flag了：</p><p><img src="https://i.loli.net/2018/09/27/5bac576b10d26.png" alt=""></p><p><img src="https://i.loli.net/2018/09/27/5bac576a84317.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;代码参考：合天智汇 &lt;a href=&quot;https://mp.weixin.qq.com/s/kxpmNpk8xAA3mbMtzyWaiw&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;几道隐写题目的总结&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;网鼎杯 第一场MISC&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://share.weiyun.com/5B1ykSO&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目下载链接&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;打开压缩包得到的是一张PNG格式的图片&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/09/27/5bac57670a4c5.png&quot; alt=&quot;1538017412117&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://yoloyanng.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>《伊萨卡岛》</title>
    <link href="https://yoloyanng.github.io/2018/09/26/%E3%80%8A%E4%BC%8A%E8%90%A8%E5%8D%A1%E5%B2%9B%E3%80%8B/"/>
    <id>https://yoloyanng.github.io/2018/09/26/《伊萨卡岛》/</id>
    <published>2018-09-25T16:00:00.000Z</published>
    <updated>2018-10-09T01:42:14.272Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/10/09/5bbc07629149b.jpg" alt=""></p><a id="more"></a><p>当你启程前往伊萨卡，</p><p>但愿你的道路漫长，</p><p>充满奇迹，充满发现。</p><p>莱斯特律戈涅斯巨人，独眼巨人，</p><p>愤怒的波塞冬海神－－不要怕他们：</p><p>你将不会在途中碰到诸如此类的怪物，</p><p>只要你高扬你的思想，</p><p>只要有一种特殊的感觉，</p><p>借出你的精神和肉体。</p><p>莱斯特律戈涅斯巨人，独眼巨人，</p><p>野蛮的波塞冬海神－－你将不会跟他们遭遇</p><p>除非你将他们一直带进你的灵魂，</p><p>除非你的灵魂将他们树立在你的面前。</p><p>但愿你的道路漫长。</p><p>但愿那里有很多夏天的早晨，</p><p>当你无比快乐和兴奋地</p><p>进入你第一次见到的海港：</p><p>但愿你在腓尼基人的贸易市场停步</p><p>购买精美的物件，</p><p>珍珠母和珊瑚，琥珀和黑檀，</p><p>各式各样销魂的香水</p><p>－－你要多销魂就有多销魂：</p><p>愿你走访众多埃及城市</p><p>向那些有识之士讨教并继续讨教。</p><p>让伊萨卡常在你心中，</p><p>抵达那里是你此行的目的。</p><p>但路上不要过于匆促，</p><p>最好多延长几年，</p><p>那时当你上得了岛你也就老了，</p><p>一路所得已经叫你富甲四方，</p><p>用不着伊萨卡来让你财源滚滚。</p><p>是伊萨卡赐予你如此神奇的旅行，</p><p>没有它你可不会启程前来。</p><p>现在她再也没有什么可以给你的了。</p><p>而如果你发现它原来是这么穷，那可不是</p><p>伊萨卡想愚弄你。</p><p>既然那时你已经变得很聪慧，并且见多识广，</p><p>你也就不会不明白，</p><p>这些伊萨卡意味着什么。</p><p>​                                —— 卡瓦菲斯</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/10/09/5bbc07629149b.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂文" scheme="https://yoloyanng.github.io/tags/%E6%9D%82%E6%96%87/"/>
    
  </entry>
  
</feed>
